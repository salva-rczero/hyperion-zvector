; Listing generated by Microsoft (R) Optimizing Compiler Version 19.34.31937.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	z900_GetIndexCDSSTab
PUBLIC	z900_Get8IndexCDSSTab
PUBLIC	z900_GetIndex009
PUBLIC	z900_GetIndex109
PUBLIC	z900_GetIndex209
PUBLIC	z900_GetIndex309
PUBLIC	z900_GetIndex409
PUBLIC	z900_GetIndex509
PUBLIC	z900_GetIndex609
PUBLIC	z900_GetIndex709
PUBLIC	z900_GetIndex010
PUBLIC	z900_GetIndex110
PUBLIC	z900_GetIndex210
PUBLIC	z900_GetIndex310
PUBLIC	z900_GetIndex410
PUBLIC	z900_GetIndex510
PUBLIC	z900_GetIndex610
PUBLIC	z900_GetIndex710
PUBLIC	z900_GetIndex011
PUBLIC	z900_GetIndex111
PUBLIC	z900_GetIndex211
PUBLIC	z900_GetIndex311
PUBLIC	z900_GetIndex411
PUBLIC	z900_GetIndex511
PUBLIC	z900_GetIndex611
PUBLIC	z900_GetIndex711
PUBLIC	z900_GetIndex012
PUBLIC	z900_GetIndex112
PUBLIC	z900_GetIndex212
PUBLIC	z900_GetIndex312
PUBLIC	z900_GetIndex412
PUBLIC	z900_GetIndex512
PUBLIC	z900_GetIndex612
PUBLIC	z900_GetIndex712
PUBLIC	z900_GetIndex013
PUBLIC	z900_GetIndex113
PUBLIC	z900_GetIndex213
PUBLIC	z900_GetIndex313
PUBLIC	z900_GetIndex413
PUBLIC	z900_GetIndex513
PUBLIC	z900_GetIndex613
PUBLIC	z900_GetIndex713
PUBLIC	z900_Get8Index009
PUBLIC	z900_Get8Index010
PUBLIC	z900_Get8Index011
PUBLIC	z900_Get8Index012
PUBLIC	z900_Get8Index013
PUBLIC	z900_GetIndexTab09
PUBLIC	z900_GetIndexTab10
PUBLIC	z900_GetIndexTab11
PUBLIC	z900_GetIndexTab12
PUBLIC	z900_GetIndexTab13
PUBLIC	z900_Get8IndexTab09
PUBLIC	z900_Get8IndexTab10
PUBLIC	z900_Get8IndexTab11
PUBLIC	z900_Get8IndexTab12
PUBLIC	z900_Get8IndexTab13
PUBLIC	s370_GetIndexCDSSTab
PUBLIC	s370_Get8IndexCDSSTab
PUBLIC	s370_GetIndex009
PUBLIC	s370_GetIndex109
PUBLIC	s370_GetIndex209
PUBLIC	s370_GetIndex309
PUBLIC	s370_GetIndex409
PUBLIC	s370_GetIndex509
PUBLIC	s370_GetIndex609
PUBLIC	s370_GetIndex709
PUBLIC	s370_GetIndex010
PUBLIC	s370_GetIndex110
PUBLIC	s370_GetIndex210
PUBLIC	s370_GetIndex310
PUBLIC	s370_GetIndex410
PUBLIC	s370_GetIndex510
PUBLIC	s370_GetIndex610
PUBLIC	s370_GetIndex710
PUBLIC	s370_GetIndex011
PUBLIC	s370_GetIndex111
PUBLIC	s370_GetIndex211
PUBLIC	s370_GetIndex311
PUBLIC	s370_GetIndex411
PUBLIC	s370_GetIndex511
PUBLIC	s370_GetIndex611
PUBLIC	s370_GetIndex711
PUBLIC	s370_GetIndex012
PUBLIC	s370_GetIndex112
PUBLIC	s370_GetIndex212
PUBLIC	s370_GetIndex312
PUBLIC	s370_GetIndex412
PUBLIC	s370_GetIndex512
PUBLIC	s370_GetIndex612
PUBLIC	s370_GetIndex712
PUBLIC	s370_GetIndex013
PUBLIC	s370_GetIndex113
PUBLIC	s370_GetIndex213
PUBLIC	s370_GetIndex313
PUBLIC	s370_GetIndex413
PUBLIC	s370_GetIndex513
PUBLIC	s370_GetIndex613
PUBLIC	s370_GetIndex713
PUBLIC	s370_Get8Index009
PUBLIC	s370_Get8Index010
PUBLIC	s370_Get8Index011
PUBLIC	s370_Get8Index012
PUBLIC	s370_Get8Index013
PUBLIC	s370_GetIndexTab09
PUBLIC	s370_GetIndexTab10
PUBLIC	s370_GetIndexTab11
PUBLIC	s370_GetIndexTab12
PUBLIC	s370_GetIndexTab13
PUBLIC	s370_Get8IndexTab09
PUBLIC	s370_Get8IndexTab10
PUBLIC	s370_Get8IndexTab11
PUBLIC	s370_Get8IndexTab12
PUBLIC	s370_Get8IndexTab13
PUBLIC	s390_GetIndexCDSSTab
PUBLIC	s390_Get8IndexCDSSTab
PUBLIC	s390_GetIndex009
PUBLIC	s390_GetIndex109
PUBLIC	s390_GetIndex209
PUBLIC	s390_GetIndex309
PUBLIC	s390_GetIndex409
PUBLIC	s390_GetIndex509
PUBLIC	s390_GetIndex609
PUBLIC	s390_GetIndex709
PUBLIC	s390_GetIndex010
PUBLIC	s390_GetIndex110
PUBLIC	s390_GetIndex210
PUBLIC	s390_GetIndex310
PUBLIC	s390_GetIndex410
PUBLIC	s390_GetIndex510
PUBLIC	s390_GetIndex610
PUBLIC	s390_GetIndex710
PUBLIC	s390_GetIndex011
PUBLIC	s390_GetIndex111
PUBLIC	s390_GetIndex211
PUBLIC	s390_GetIndex311
PUBLIC	s390_GetIndex411
PUBLIC	s390_GetIndex511
PUBLIC	s390_GetIndex611
PUBLIC	s390_GetIndex711
PUBLIC	s390_GetIndex012
PUBLIC	s390_GetIndex112
PUBLIC	s390_GetIndex212
PUBLIC	s390_GetIndex312
PUBLIC	s390_GetIndex412
PUBLIC	s390_GetIndex512
PUBLIC	s390_GetIndex612
PUBLIC	s390_GetIndex712
PUBLIC	s390_GetIndex013
PUBLIC	s390_GetIndex113
PUBLIC	s390_GetIndex213
PUBLIC	s390_GetIndex313
PUBLIC	s390_GetIndex413
PUBLIC	s390_GetIndex513
PUBLIC	s390_GetIndex613
PUBLIC	s390_GetIndex713
PUBLIC	s390_Get8Index009
PUBLIC	s390_Get8Index010
PUBLIC	s390_Get8Index011
PUBLIC	s390_Get8Index012
PUBLIC	s390_Get8Index013
PUBLIC	s390_GetIndexTab09
PUBLIC	s390_GetIndexTab10
PUBLIC	s390_GetIndexTab11
PUBLIC	s390_GetIndexTab12
PUBLIC	s390_GetIndexTab13
PUBLIC	s390_Get8IndexTab09
PUBLIC	s390_Get8IndexTab10
PUBLIC	s390_Get8IndexTab11
PUBLIC	s390_Get8IndexTab12
PUBLIC	s390_Get8IndexTab13
_DATA	SEGMENT
z900_GetIndexCDSSTab DQ FLAT:z900_GetIndexTab09
	DQ	FLAT:z900_GetIndexTab10
	DQ	FLAT:z900_GetIndexTab11
	DQ	FLAT:z900_GetIndexTab12
	DQ	FLAT:z900_GetIndexTab13
z900_Get8IndexCDSSTab DQ FLAT:z900_Get8IndexTab09
	DQ	FLAT:z900_Get8IndexTab10
	DQ	FLAT:z900_Get8IndexTab11
	DQ	FLAT:z900_Get8IndexTab12
	DQ	FLAT:z900_Get8IndexTab13
z900_GetIndexTab09 DQ FLAT:z900_GetIndex009
	DQ	FLAT:z900_GetIndex109
	DQ	FLAT:z900_GetIndex209
	DQ	FLAT:z900_GetIndex309
	DQ	FLAT:z900_GetIndex409
	DQ	FLAT:z900_GetIndex509
	DQ	FLAT:z900_GetIndex609
	DQ	FLAT:z900_GetIndex709
z900_GetIndexTab10 DQ FLAT:z900_GetIndex010
	DQ	FLAT:z900_GetIndex110
	DQ	FLAT:z900_GetIndex210
	DQ	FLAT:z900_GetIndex310
	DQ	FLAT:z900_GetIndex410
	DQ	FLAT:z900_GetIndex510
	DQ	FLAT:z900_GetIndex610
	DQ	FLAT:z900_GetIndex710
z900_GetIndexTab11 DQ FLAT:z900_GetIndex011
	DQ	FLAT:z900_GetIndex111
	DQ	FLAT:z900_GetIndex211
	DQ	FLAT:z900_GetIndex311
	DQ	FLAT:z900_GetIndex411
	DQ	FLAT:z900_GetIndex511
	DQ	FLAT:z900_GetIndex611
	DQ	FLAT:z900_GetIndex711
z900_GetIndexTab12 DQ FLAT:z900_GetIndex012
	DQ	FLAT:z900_GetIndex112
	DQ	FLAT:z900_GetIndex212
	DQ	FLAT:z900_GetIndex312
	DQ	FLAT:z900_GetIndex412
	DQ	FLAT:z900_GetIndex512
	DQ	FLAT:z900_GetIndex612
	DQ	FLAT:z900_GetIndex712
z900_GetIndexTab13 DQ FLAT:z900_GetIndex013
	DQ	FLAT:z900_GetIndex113
	DQ	FLAT:z900_GetIndex213
	DQ	FLAT:z900_GetIndex313
	DQ	FLAT:z900_GetIndex413
	DQ	FLAT:z900_GetIndex513
	DQ	FLAT:z900_GetIndex613
	DQ	FLAT:z900_GetIndex713
z900_Get8IndexTab09 DQ FLAT:z900_Get8Index009
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
z900_Get8IndexTab10 DQ FLAT:z900_Get8Index010
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
z900_Get8IndexTab11 DQ FLAT:z900_Get8Index011
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
z900_Get8IndexTab12 DQ FLAT:z900_Get8Index012
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
z900_Get8IndexTab13 DQ FLAT:z900_Get8Index013
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
s370_GetIndexCDSSTab DQ FLAT:s370_GetIndexTab09
	DQ	FLAT:s370_GetIndexTab10
	DQ	FLAT:s370_GetIndexTab11
	DQ	FLAT:s370_GetIndexTab12
	DQ	FLAT:s370_GetIndexTab13
s370_Get8IndexCDSSTab DQ FLAT:s370_Get8IndexTab09
	DQ	FLAT:s370_Get8IndexTab10
	DQ	FLAT:s370_Get8IndexTab11
	DQ	FLAT:s370_Get8IndexTab12
	DQ	FLAT:s370_Get8IndexTab13
s370_GetIndexTab09 DQ FLAT:s370_GetIndex009
	DQ	FLAT:s370_GetIndex109
	DQ	FLAT:s370_GetIndex209
	DQ	FLAT:s370_GetIndex309
	DQ	FLAT:s370_GetIndex409
	DQ	FLAT:s370_GetIndex509
	DQ	FLAT:s370_GetIndex609
	DQ	FLAT:s370_GetIndex709
s370_GetIndexTab10 DQ FLAT:s370_GetIndex010
	DQ	FLAT:s370_GetIndex110
	DQ	FLAT:s370_GetIndex210
	DQ	FLAT:s370_GetIndex310
	DQ	FLAT:s370_GetIndex410
	DQ	FLAT:s370_GetIndex510
	DQ	FLAT:s370_GetIndex610
	DQ	FLAT:s370_GetIndex710
s370_GetIndexTab11 DQ FLAT:s370_GetIndex011
	DQ	FLAT:s370_GetIndex111
	DQ	FLAT:s370_GetIndex211
	DQ	FLAT:s370_GetIndex311
	DQ	FLAT:s370_GetIndex411
	DQ	FLAT:s370_GetIndex511
	DQ	FLAT:s370_GetIndex611
	DQ	FLAT:s370_GetIndex711
s370_GetIndexTab12 DQ FLAT:s370_GetIndex012
	DQ	FLAT:s370_GetIndex112
	DQ	FLAT:s370_GetIndex212
	DQ	FLAT:s370_GetIndex312
	DQ	FLAT:s370_GetIndex412
	DQ	FLAT:s370_GetIndex512
	DQ	FLAT:s370_GetIndex612
	DQ	FLAT:s370_GetIndex712
s370_GetIndexTab13 DQ FLAT:s370_GetIndex013
	DQ	FLAT:s370_GetIndex113
	DQ	FLAT:s370_GetIndex213
	DQ	FLAT:s370_GetIndex313
	DQ	FLAT:s370_GetIndex413
	DQ	FLAT:s370_GetIndex513
	DQ	FLAT:s370_GetIndex613
	DQ	FLAT:s370_GetIndex713
s370_Get8IndexTab09 DQ FLAT:s370_Get8Index009
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
s370_Get8IndexTab10 DQ FLAT:s370_Get8Index010
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
s370_Get8IndexTab11 DQ FLAT:s370_Get8Index011
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
s370_Get8IndexTab12 DQ FLAT:s370_Get8Index012
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
s370_Get8IndexTab13 DQ FLAT:s370_Get8Index013
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
s390_GetIndexCDSSTab DQ FLAT:s390_GetIndexTab09
	DQ	FLAT:s390_GetIndexTab10
	DQ	FLAT:s390_GetIndexTab11
	DQ	FLAT:s390_GetIndexTab12
	DQ	FLAT:s390_GetIndexTab13
s390_Get8IndexCDSSTab DQ FLAT:s390_Get8IndexTab09
	DQ	FLAT:s390_Get8IndexTab10
	DQ	FLAT:s390_Get8IndexTab11
	DQ	FLAT:s390_Get8IndexTab12
	DQ	FLAT:s390_Get8IndexTab13
s390_GetIndexTab09 DQ FLAT:s390_GetIndex009
	DQ	FLAT:s390_GetIndex109
	DQ	FLAT:s390_GetIndex209
	DQ	FLAT:s390_GetIndex309
	DQ	FLAT:s390_GetIndex409
	DQ	FLAT:s390_GetIndex509
	DQ	FLAT:s390_GetIndex609
	DQ	FLAT:s390_GetIndex709
s390_GetIndexTab10 DQ FLAT:s390_GetIndex010
	DQ	FLAT:s390_GetIndex110
	DQ	FLAT:s390_GetIndex210
	DQ	FLAT:s390_GetIndex310
	DQ	FLAT:s390_GetIndex410
	DQ	FLAT:s390_GetIndex510
	DQ	FLAT:s390_GetIndex610
	DQ	FLAT:s390_GetIndex710
s390_GetIndexTab11 DQ FLAT:s390_GetIndex011
	DQ	FLAT:s390_GetIndex111
	DQ	FLAT:s390_GetIndex211
	DQ	FLAT:s390_GetIndex311
	DQ	FLAT:s390_GetIndex411
	DQ	FLAT:s390_GetIndex511
	DQ	FLAT:s390_GetIndex611
	DQ	FLAT:s390_GetIndex711
s390_GetIndexTab12 DQ FLAT:s390_GetIndex012
	DQ	FLAT:s390_GetIndex112
	DQ	FLAT:s390_GetIndex212
	DQ	FLAT:s390_GetIndex312
	DQ	FLAT:s390_GetIndex412
	DQ	FLAT:s390_GetIndex512
	DQ	FLAT:s390_GetIndex612
	DQ	FLAT:s390_GetIndex712
s390_GetIndexTab13 DQ FLAT:s390_GetIndex013
	DQ	FLAT:s390_GetIndex113
	DQ	FLAT:s390_GetIndex213
	DQ	FLAT:s390_GetIndex313
	DQ	FLAT:s390_GetIndex413
	DQ	FLAT:s390_GetIndex513
	DQ	FLAT:s390_GetIndex613
	DQ	FLAT:s390_GetIndex713
s390_Get8IndexTab09 DQ FLAT:s390_Get8Index009
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
s390_Get8IndexTab10 DQ FLAT:s390_Get8Index010
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
s390_Get8IndexTab11 DQ FLAT:s390_Get8Index011
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
s390_Get8IndexTab12 DQ FLAT:s390_Get8Index012
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
s390_Get8IndexTab13 DQ FLAT:s390_Get8Index013
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
_DATA	ENDS
CONST	SEGMENT
CKD_ENDTRK DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
CONST	ENDS
EXTRN	s370_cmpsc_vfetchb:PROC
EXTRN	s370_cmpsc_vfetch2:PROC
EXTRN	s370_cmpsc_vfetch4:PROC
EXTRN	s370_cmpsc_vfetch8:PROC
EXTRN	s390_cmpsc_vfetchb:PROC
EXTRN	s390_cmpsc_vfetch2:PROC
EXTRN	s390_cmpsc_vfetch4:PROC
EXTRN	s390_cmpsc_vfetch8:PROC
EXTRN	z900_cmpsc_vfetchb:PROC
EXTRN	z900_cmpsc_vfetch2:PROC
EXTRN	z900_cmpsc_vfetch4:PROC
EXTRN	z900_cmpsc_vfetch8:PROC
pdata	SEGMENT
$pdata$s370_GetIndex009 DD imagerel $LN4
	DD	imagerel $LN4+97
	DD	imagerel $unwind$s370_GetIndex009
$pdata$s370_GetIndex109 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s370_GetIndex109
$pdata$s370_GetIndex209 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s370_GetIndex209
$pdata$s370_GetIndex309 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s370_GetIndex309
$pdata$s370_GetIndex409 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s370_GetIndex409
$pdata$s370_GetIndex509 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s370_GetIndex509
$pdata$s370_GetIndex609 DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$s370_GetIndex609
$pdata$s370_GetIndex709 DD imagerel $LN4
	DD	imagerel $LN4+99
	DD	imagerel $unwind$s370_GetIndex709
$pdata$s370_GetIndex010 DD imagerel $LN4
	DD	imagerel $LN4+97
	DD	imagerel $unwind$s370_GetIndex010
$pdata$s370_GetIndex110 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s370_GetIndex110
$pdata$s370_GetIndex210 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s370_GetIndex210
$pdata$s370_GetIndex310 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s370_GetIndex310
$pdata$s370_GetIndex410 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s370_GetIndex410
$pdata$s370_GetIndex510 DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$s370_GetIndex510
$pdata$s370_GetIndex610 DD imagerel $LN4
	DD	imagerel $LN4+99
	DD	imagerel $unwind$s370_GetIndex610
$pdata$s370_GetIndex710 DD imagerel $LN4
	DD	imagerel $LN4+149
	DD	imagerel $unwind$s370_GetIndex710
$pdata$s370_GetIndex011 DD imagerel $LN4
	DD	imagerel $LN4+97
	DD	imagerel $unwind$s370_GetIndex011
$pdata$s370_GetIndex111 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s370_GetIndex111
$pdata$s370_GetIndex211 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s370_GetIndex211
$pdata$s370_GetIndex311 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s370_GetIndex311
$pdata$s370_GetIndex411 DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$s370_GetIndex411
$pdata$s370_GetIndex511 DD imagerel $LN4
	DD	imagerel $LN4+99
	DD	imagerel $unwind$s370_GetIndex511
$pdata$s370_GetIndex611 DD imagerel $LN4
	DD	imagerel $LN4+149
	DD	imagerel $unwind$s370_GetIndex611
$pdata$s370_GetIndex711 DD imagerel $LN4
	DD	imagerel $LN4+150
	DD	imagerel $unwind$s370_GetIndex711
$pdata$s370_GetIndex012 DD imagerel $LN4
	DD	imagerel $LN4+97
	DD	imagerel $unwind$s370_GetIndex012
$pdata$s370_GetIndex112 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s370_GetIndex112
$pdata$s370_GetIndex212 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s370_GetIndex212
$pdata$s370_GetIndex312 DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$s370_GetIndex312
$pdata$s370_GetIndex412 DD imagerel $LN4
	DD	imagerel $LN4+99
	DD	imagerel $unwind$s370_GetIndex412
$pdata$s370_GetIndex512 DD imagerel $LN4
	DD	imagerel $LN4+149
	DD	imagerel $unwind$s370_GetIndex512
$pdata$s370_GetIndex612 DD imagerel $LN4
	DD	imagerel $LN4+150
	DD	imagerel $unwind$s370_GetIndex612
$pdata$s370_GetIndex712 DD imagerel $LN4
	DD	imagerel $LN4+150
	DD	imagerel $unwind$s370_GetIndex712
$pdata$s370_GetIndex013 DD imagerel $LN4
	DD	imagerel $LN4+97
	DD	imagerel $unwind$s370_GetIndex013
$pdata$s370_GetIndex113 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s370_GetIndex113
$pdata$s370_GetIndex213 DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$s370_GetIndex213
$pdata$s370_GetIndex313 DD imagerel $LN4
	DD	imagerel $LN4+99
	DD	imagerel $unwind$s370_GetIndex313
$pdata$s370_GetIndex413 DD imagerel $LN4
	DD	imagerel $LN4+149
	DD	imagerel $unwind$s370_GetIndex413
$pdata$s370_GetIndex513 DD imagerel $LN4
	DD	imagerel $LN4+150
	DD	imagerel $unwind$s370_GetIndex513
$pdata$s370_GetIndex613 DD imagerel $LN4
	DD	imagerel $LN4+150
	DD	imagerel $unwind$s370_GetIndex613
$pdata$s370_GetIndex713 DD imagerel $LN4
	DD	imagerel $LN4+150
	DD	imagerel $unwind$s370_GetIndex713
$pdata$s370_Get8Index009 DD imagerel $LN4
	DD	imagerel $LN4+389
	DD	imagerel $unwind$s370_Get8Index009
$pdata$s370_Get8Index010 DD imagerel $LN4
	DD	imagerel $LN4+391
	DD	imagerel $unwind$s370_Get8Index010
$pdata$s370_Get8Index011 DD imagerel $LN4
	DD	imagerel $LN4+437
	DD	imagerel $unwind$s370_Get8Index011
$pdata$s370_Get8Index012 DD imagerel $LN4
	DD	imagerel $LN4+384
	DD	imagerel $unwind$s370_Get8Index012
$pdata$s370_Get8Index013 DD imagerel $LN4
	DD	imagerel $LN4+426
	DD	imagerel $unwind$s370_Get8Index013
$pdata$s390_GetIndex009 DD imagerel $LN4
	DD	imagerel $LN4+97
	DD	imagerel $unwind$s390_GetIndex009
$pdata$s390_GetIndex109 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s390_GetIndex109
$pdata$s390_GetIndex209 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s390_GetIndex209
$pdata$s390_GetIndex309 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s390_GetIndex309
$pdata$s390_GetIndex409 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s390_GetIndex409
$pdata$s390_GetIndex509 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s390_GetIndex509
$pdata$s390_GetIndex609 DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$s390_GetIndex609
$pdata$s390_GetIndex709 DD imagerel $LN4
	DD	imagerel $LN4+99
	DD	imagerel $unwind$s390_GetIndex709
$pdata$s390_GetIndex010 DD imagerel $LN4
	DD	imagerel $LN4+97
	DD	imagerel $unwind$s390_GetIndex010
$pdata$s390_GetIndex110 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s390_GetIndex110
$pdata$s390_GetIndex210 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s390_GetIndex210
$pdata$s390_GetIndex310 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s390_GetIndex310
$pdata$s390_GetIndex410 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s390_GetIndex410
$pdata$s390_GetIndex510 DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$s390_GetIndex510
$pdata$s390_GetIndex610 DD imagerel $LN4
	DD	imagerel $LN4+99
	DD	imagerel $unwind$s390_GetIndex610
$pdata$s390_GetIndex710 DD imagerel $LN4
	DD	imagerel $LN4+149
	DD	imagerel $unwind$s390_GetIndex710
$pdata$s390_GetIndex011 DD imagerel $LN4
	DD	imagerel $LN4+97
	DD	imagerel $unwind$s390_GetIndex011
$pdata$s390_GetIndex111 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s390_GetIndex111
$pdata$s390_GetIndex211 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s390_GetIndex211
$pdata$s390_GetIndex311 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s390_GetIndex311
$pdata$s390_GetIndex411 DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$s390_GetIndex411
$pdata$s390_GetIndex511 DD imagerel $LN4
	DD	imagerel $LN4+99
	DD	imagerel $unwind$s390_GetIndex511
$pdata$s390_GetIndex611 DD imagerel $LN4
	DD	imagerel $LN4+149
	DD	imagerel $unwind$s390_GetIndex611
$pdata$s390_GetIndex711 DD imagerel $LN4
	DD	imagerel $LN4+150
	DD	imagerel $unwind$s390_GetIndex711
$pdata$s390_GetIndex012 DD imagerel $LN4
	DD	imagerel $LN4+97
	DD	imagerel $unwind$s390_GetIndex012
$pdata$s390_GetIndex112 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s390_GetIndex112
$pdata$s390_GetIndex212 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s390_GetIndex212
$pdata$s390_GetIndex312 DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$s390_GetIndex312
$pdata$s390_GetIndex412 DD imagerel $LN4
	DD	imagerel $LN4+99
	DD	imagerel $unwind$s390_GetIndex412
$pdata$s390_GetIndex512 DD imagerel $LN4
	DD	imagerel $LN4+149
	DD	imagerel $unwind$s390_GetIndex512
$pdata$s390_GetIndex612 DD imagerel $LN4
	DD	imagerel $LN4+150
	DD	imagerel $unwind$s390_GetIndex612
$pdata$s390_GetIndex712 DD imagerel $LN4
	DD	imagerel $LN4+150
	DD	imagerel $unwind$s390_GetIndex712
$pdata$s390_GetIndex013 DD imagerel $LN4
	DD	imagerel $LN4+97
	DD	imagerel $unwind$s390_GetIndex013
$pdata$s390_GetIndex113 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$s390_GetIndex113
$pdata$s390_GetIndex213 DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$s390_GetIndex213
$pdata$s390_GetIndex313 DD imagerel $LN4
	DD	imagerel $LN4+99
	DD	imagerel $unwind$s390_GetIndex313
$pdata$s390_GetIndex413 DD imagerel $LN4
	DD	imagerel $LN4+149
	DD	imagerel $unwind$s390_GetIndex413
$pdata$s390_GetIndex513 DD imagerel $LN4
	DD	imagerel $LN4+150
	DD	imagerel $unwind$s390_GetIndex513
$pdata$s390_GetIndex613 DD imagerel $LN4
	DD	imagerel $LN4+150
	DD	imagerel $unwind$s390_GetIndex613
$pdata$s390_GetIndex713 DD imagerel $LN4
	DD	imagerel $LN4+150
	DD	imagerel $unwind$s390_GetIndex713
$pdata$s390_Get8Index009 DD imagerel $LN4
	DD	imagerel $LN4+389
	DD	imagerel $unwind$s390_Get8Index009
$pdata$s390_Get8Index010 DD imagerel $LN4
	DD	imagerel $LN4+391
	DD	imagerel $unwind$s390_Get8Index010
$pdata$s390_Get8Index011 DD imagerel $LN4
	DD	imagerel $LN4+437
	DD	imagerel $unwind$s390_Get8Index011
$pdata$s390_Get8Index012 DD imagerel $LN4
	DD	imagerel $LN4+384
	DD	imagerel $unwind$s390_Get8Index012
$pdata$s390_Get8Index013 DD imagerel $LN4
	DD	imagerel $LN4+426
	DD	imagerel $unwind$s390_Get8Index013
$pdata$z900_GetIndex009 DD imagerel $LN4
	DD	imagerel $LN4+98
	DD	imagerel $unwind$z900_GetIndex009
$pdata$z900_GetIndex109 DD imagerel $LN4
	DD	imagerel $LN4+103
	DD	imagerel $unwind$z900_GetIndex109
$pdata$z900_GetIndex209 DD imagerel $LN4
	DD	imagerel $LN4+103
	DD	imagerel $unwind$z900_GetIndex209
$pdata$z900_GetIndex309 DD imagerel $LN4
	DD	imagerel $LN4+103
	DD	imagerel $unwind$z900_GetIndex309
$pdata$z900_GetIndex409 DD imagerel $LN4
	DD	imagerel $LN4+103
	DD	imagerel $unwind$z900_GetIndex409
$pdata$z900_GetIndex509 DD imagerel $LN4
	DD	imagerel $LN4+103
	DD	imagerel $unwind$z900_GetIndex509
$pdata$z900_GetIndex609 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$z900_GetIndex609
$pdata$z900_GetIndex709 DD imagerel $LN4
	DD	imagerel $LN4+100
	DD	imagerel $unwind$z900_GetIndex709
$pdata$z900_GetIndex010 DD imagerel $LN4
	DD	imagerel $LN4+98
	DD	imagerel $unwind$z900_GetIndex010
$pdata$z900_GetIndex110 DD imagerel $LN4
	DD	imagerel $LN4+103
	DD	imagerel $unwind$z900_GetIndex110
$pdata$z900_GetIndex210 DD imagerel $LN4
	DD	imagerel $LN4+103
	DD	imagerel $unwind$z900_GetIndex210
$pdata$z900_GetIndex310 DD imagerel $LN4
	DD	imagerel $LN4+103
	DD	imagerel $unwind$z900_GetIndex310
$pdata$z900_GetIndex410 DD imagerel $LN4
	DD	imagerel $LN4+103
	DD	imagerel $unwind$z900_GetIndex410
$pdata$z900_GetIndex510 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$z900_GetIndex510
$pdata$z900_GetIndex610 DD imagerel $LN4
	DD	imagerel $LN4+100
	DD	imagerel $unwind$z900_GetIndex610
$pdata$z900_GetIndex710 DD imagerel $LN4
	DD	imagerel $LN4+150
	DD	imagerel $unwind$z900_GetIndex710
$pdata$z900_GetIndex011 DD imagerel $LN4
	DD	imagerel $LN4+98
	DD	imagerel $unwind$z900_GetIndex011
$pdata$z900_GetIndex111 DD imagerel $LN4
	DD	imagerel $LN4+103
	DD	imagerel $unwind$z900_GetIndex111
$pdata$z900_GetIndex211 DD imagerel $LN4
	DD	imagerel $LN4+103
	DD	imagerel $unwind$z900_GetIndex211
$pdata$z900_GetIndex311 DD imagerel $LN4
	DD	imagerel $LN4+103
	DD	imagerel $unwind$z900_GetIndex311
$pdata$z900_GetIndex411 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$z900_GetIndex411
$pdata$z900_GetIndex511 DD imagerel $LN4
	DD	imagerel $LN4+100
	DD	imagerel $unwind$z900_GetIndex511
$pdata$z900_GetIndex611 DD imagerel $LN4
	DD	imagerel $LN4+150
	DD	imagerel $unwind$z900_GetIndex611
$pdata$z900_GetIndex711 DD imagerel $LN4
	DD	imagerel $LN4+151
	DD	imagerel $unwind$z900_GetIndex711
$pdata$z900_GetIndex012 DD imagerel $LN4
	DD	imagerel $LN4+98
	DD	imagerel $unwind$z900_GetIndex012
$pdata$z900_GetIndex112 DD imagerel $LN4
	DD	imagerel $LN4+103
	DD	imagerel $unwind$z900_GetIndex112
$pdata$z900_GetIndex212 DD imagerel $LN4
	DD	imagerel $LN4+103
	DD	imagerel $unwind$z900_GetIndex212
$pdata$z900_GetIndex312 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$z900_GetIndex312
$pdata$z900_GetIndex412 DD imagerel $LN4
	DD	imagerel $LN4+100
	DD	imagerel $unwind$z900_GetIndex412
$pdata$z900_GetIndex512 DD imagerel $LN4
	DD	imagerel $LN4+150
	DD	imagerel $unwind$z900_GetIndex512
$pdata$z900_GetIndex612 DD imagerel $LN4
	DD	imagerel $LN4+151
	DD	imagerel $unwind$z900_GetIndex612
$pdata$z900_GetIndex712 DD imagerel $LN4
	DD	imagerel $LN4+151
	DD	imagerel $unwind$z900_GetIndex712
$pdata$z900_GetIndex013 DD imagerel $LN4
	DD	imagerel $LN4+98
	DD	imagerel $unwind$z900_GetIndex013
$pdata$z900_GetIndex113 DD imagerel $LN4
	DD	imagerel $LN4+103
	DD	imagerel $unwind$z900_GetIndex113
$pdata$z900_GetIndex213 DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$z900_GetIndex213
$pdata$z900_GetIndex313 DD imagerel $LN4
	DD	imagerel $LN4+100
	DD	imagerel $unwind$z900_GetIndex313
$pdata$z900_GetIndex413 DD imagerel $LN4
	DD	imagerel $LN4+150
	DD	imagerel $unwind$z900_GetIndex413
$pdata$z900_GetIndex513 DD imagerel $LN4
	DD	imagerel $LN4+151
	DD	imagerel $unwind$z900_GetIndex513
$pdata$z900_GetIndex613 DD imagerel $LN4
	DD	imagerel $LN4+151
	DD	imagerel $unwind$z900_GetIndex613
$pdata$z900_GetIndex713 DD imagerel $LN4
	DD	imagerel $LN4+151
	DD	imagerel $unwind$z900_GetIndex713
$pdata$z900_Get8Index009 DD imagerel $LN4
	DD	imagerel $LN4+391
	DD	imagerel $unwind$z900_Get8Index009
$pdata$z900_Get8Index010 DD imagerel $LN4
	DD	imagerel $LN4+393
	DD	imagerel $unwind$z900_Get8Index010
$pdata$z900_Get8Index011 DD imagerel $LN4
	DD	imagerel $LN4+440
	DD	imagerel $unwind$z900_Get8Index011
$pdata$z900_Get8Index012 DD imagerel $LN4
	DD	imagerel $LN4+386
	DD	imagerel $unwind$z900_Get8Index012
$pdata$z900_Get8Index013 DD imagerel $LN4
	DD	imagerel $LN4+429
	DD	imagerel $unwind$z900_Get8Index013
pdata	ENDS
xdata	SEGMENT
$unwind$s370_GetIndex009 DD 010901H
	DD	04209H
$unwind$s370_GetIndex109 DD 010901H
	DD	04209H
$unwind$s370_GetIndex209 DD 010901H
	DD	04209H
$unwind$s370_GetIndex309 DD 010901H
	DD	04209H
$unwind$s370_GetIndex409 DD 010901H
	DD	04209H
$unwind$s370_GetIndex509 DD 010901H
	DD	04209H
$unwind$s370_GetIndex609 DD 010901H
	DD	04209H
$unwind$s370_GetIndex709 DD 010901H
	DD	04209H
$unwind$s370_GetIndex010 DD 010901H
	DD	04209H
$unwind$s370_GetIndex110 DD 010901H
	DD	04209H
$unwind$s370_GetIndex210 DD 010901H
	DD	04209H
$unwind$s370_GetIndex310 DD 010901H
	DD	04209H
$unwind$s370_GetIndex410 DD 010901H
	DD	04209H
$unwind$s370_GetIndex510 DD 010901H
	DD	04209H
$unwind$s370_GetIndex610 DD 010901H
	DD	04209H
$unwind$s370_GetIndex710 DD 010901H
	DD	06209H
$unwind$s370_GetIndex011 DD 010901H
	DD	04209H
$unwind$s370_GetIndex111 DD 010901H
	DD	04209H
$unwind$s370_GetIndex211 DD 010901H
	DD	04209H
$unwind$s370_GetIndex311 DD 010901H
	DD	04209H
$unwind$s370_GetIndex411 DD 010901H
	DD	04209H
$unwind$s370_GetIndex511 DD 010901H
	DD	04209H
$unwind$s370_GetIndex611 DD 010901H
	DD	06209H
$unwind$s370_GetIndex711 DD 010901H
	DD	06209H
$unwind$s370_GetIndex012 DD 010901H
	DD	04209H
$unwind$s370_GetIndex112 DD 010901H
	DD	04209H
$unwind$s370_GetIndex212 DD 010901H
	DD	04209H
$unwind$s370_GetIndex312 DD 010901H
	DD	04209H
$unwind$s370_GetIndex412 DD 010901H
	DD	04209H
$unwind$s370_GetIndex512 DD 010901H
	DD	06209H
$unwind$s370_GetIndex612 DD 010901H
	DD	06209H
$unwind$s370_GetIndex712 DD 010901H
	DD	06209H
$unwind$s370_GetIndex013 DD 010901H
	DD	04209H
$unwind$s370_GetIndex113 DD 010901H
	DD	04209H
$unwind$s370_GetIndex213 DD 010901H
	DD	04209H
$unwind$s370_GetIndex313 DD 010901H
	DD	04209H
$unwind$s370_GetIndex413 DD 010901H
	DD	06209H
$unwind$s370_GetIndex513 DD 010901H
	DD	06209H
$unwind$s370_GetIndex613 DD 010901H
	DD	06209H
$unwind$s370_GetIndex713 DD 010901H
	DD	06209H
$unwind$s370_Get8Index009 DD 010901H
	DD	06209H
$unwind$s370_Get8Index010 DD 010901H
	DD	06209H
$unwind$s370_Get8Index011 DD 010901H
	DD	06209H
$unwind$s370_Get8Index012 DD 010901H
	DD	06209H
$unwind$s370_Get8Index013 DD 010901H
	DD	06209H
$unwind$s390_GetIndex009 DD 010901H
	DD	04209H
$unwind$s390_GetIndex109 DD 010901H
	DD	04209H
$unwind$s390_GetIndex209 DD 010901H
	DD	04209H
$unwind$s390_GetIndex309 DD 010901H
	DD	04209H
$unwind$s390_GetIndex409 DD 010901H
	DD	04209H
$unwind$s390_GetIndex509 DD 010901H
	DD	04209H
$unwind$s390_GetIndex609 DD 010901H
	DD	04209H
$unwind$s390_GetIndex709 DD 010901H
	DD	04209H
$unwind$s390_GetIndex010 DD 010901H
	DD	04209H
$unwind$s390_GetIndex110 DD 010901H
	DD	04209H
$unwind$s390_GetIndex210 DD 010901H
	DD	04209H
$unwind$s390_GetIndex310 DD 010901H
	DD	04209H
$unwind$s390_GetIndex410 DD 010901H
	DD	04209H
$unwind$s390_GetIndex510 DD 010901H
	DD	04209H
$unwind$s390_GetIndex610 DD 010901H
	DD	04209H
$unwind$s390_GetIndex710 DD 010901H
	DD	06209H
$unwind$s390_GetIndex011 DD 010901H
	DD	04209H
$unwind$s390_GetIndex111 DD 010901H
	DD	04209H
$unwind$s390_GetIndex211 DD 010901H
	DD	04209H
$unwind$s390_GetIndex311 DD 010901H
	DD	04209H
$unwind$s390_GetIndex411 DD 010901H
	DD	04209H
$unwind$s390_GetIndex511 DD 010901H
	DD	04209H
$unwind$s390_GetIndex611 DD 010901H
	DD	06209H
$unwind$s390_GetIndex711 DD 010901H
	DD	06209H
$unwind$s390_GetIndex012 DD 010901H
	DD	04209H
$unwind$s390_GetIndex112 DD 010901H
	DD	04209H
$unwind$s390_GetIndex212 DD 010901H
	DD	04209H
$unwind$s390_GetIndex312 DD 010901H
	DD	04209H
$unwind$s390_GetIndex412 DD 010901H
	DD	04209H
$unwind$s390_GetIndex512 DD 010901H
	DD	06209H
$unwind$s390_GetIndex612 DD 010901H
	DD	06209H
$unwind$s390_GetIndex712 DD 010901H
	DD	06209H
$unwind$s390_GetIndex013 DD 010901H
	DD	04209H
$unwind$s390_GetIndex113 DD 010901H
	DD	04209H
$unwind$s390_GetIndex213 DD 010901H
	DD	04209H
$unwind$s390_GetIndex313 DD 010901H
	DD	04209H
$unwind$s390_GetIndex413 DD 010901H
	DD	06209H
$unwind$s390_GetIndex513 DD 010901H
	DD	06209H
$unwind$s390_GetIndex613 DD 010901H
	DD	06209H
$unwind$s390_GetIndex713 DD 010901H
	DD	06209H
$unwind$s390_Get8Index009 DD 010901H
	DD	06209H
$unwind$s390_Get8Index010 DD 010901H
	DD	06209H
$unwind$s390_Get8Index011 DD 010901H
	DD	06209H
$unwind$s390_Get8Index012 DD 010901H
	DD	06209H
$unwind$s390_Get8Index013 DD 010901H
	DD	06209H
$unwind$z900_GetIndex009 DD 010901H
	DD	04209H
$unwind$z900_GetIndex109 DD 010901H
	DD	04209H
$unwind$z900_GetIndex209 DD 010901H
	DD	04209H
$unwind$z900_GetIndex309 DD 010901H
	DD	04209H
$unwind$z900_GetIndex409 DD 010901H
	DD	04209H
$unwind$z900_GetIndex509 DD 010901H
	DD	04209H
$unwind$z900_GetIndex609 DD 010901H
	DD	04209H
$unwind$z900_GetIndex709 DD 010901H
	DD	04209H
$unwind$z900_GetIndex010 DD 010901H
	DD	04209H
$unwind$z900_GetIndex110 DD 010901H
	DD	04209H
$unwind$z900_GetIndex210 DD 010901H
	DD	04209H
$unwind$z900_GetIndex310 DD 010901H
	DD	04209H
$unwind$z900_GetIndex410 DD 010901H
	DD	04209H
$unwind$z900_GetIndex510 DD 010901H
	DD	04209H
$unwind$z900_GetIndex610 DD 010901H
	DD	04209H
$unwind$z900_GetIndex710 DD 010901H
	DD	06209H
$unwind$z900_GetIndex011 DD 010901H
	DD	04209H
$unwind$z900_GetIndex111 DD 010901H
	DD	04209H
$unwind$z900_GetIndex211 DD 010901H
	DD	04209H
$unwind$z900_GetIndex311 DD 010901H
	DD	04209H
$unwind$z900_GetIndex411 DD 010901H
	DD	04209H
$unwind$z900_GetIndex511 DD 010901H
	DD	04209H
$unwind$z900_GetIndex611 DD 010901H
	DD	06209H
$unwind$z900_GetIndex711 DD 010901H
	DD	06209H
$unwind$z900_GetIndex012 DD 010901H
	DD	04209H
$unwind$z900_GetIndex112 DD 010901H
	DD	04209H
$unwind$z900_GetIndex212 DD 010901H
	DD	04209H
$unwind$z900_GetIndex312 DD 010901H
	DD	04209H
$unwind$z900_GetIndex412 DD 010901H
	DD	04209H
$unwind$z900_GetIndex512 DD 010901H
	DD	06209H
$unwind$z900_GetIndex612 DD 010901H
	DD	06209H
$unwind$z900_GetIndex712 DD 010901H
	DD	06209H
$unwind$z900_GetIndex013 DD 010901H
	DD	04209H
$unwind$z900_GetIndex113 DD 010901H
	DD	04209H
$unwind$z900_GetIndex213 DD 010901H
	DD	04209H
$unwind$z900_GetIndex313 DD 010901H
	DD	04209H
$unwind$z900_GetIndex413 DD 010901H
	DD	06209H
$unwind$z900_GetIndex513 DD 010901H
	DD	06209H
$unwind$z900_GetIndex613 DD 010901H
	DD	06209H
$unwind$z900_GetIndex713 DD 010901H
	DD	06209H
$unwind$z900_Get8Index009 DD 010901H
	DD	06209H
$unwind$z900_Get8Index010 DD 010901H
	DD	06209H
$unwind$z900_Get8Index011 DD 010901H
	DD	06209H
$unwind$z900_Get8Index012 DD 010901H
	DD	06209H
$unwind$z900_Get8Index013 DD 010901H
	DD	06209H
xdata	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
b$ = 32
fw$ = 36
dw$ = 40
pGIBLK$ = 64
z900_Get8Index013 PROC

; 538  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 539  :     register U8  b;
; 540  :     register U32 fw;
; 541  :     register U64 dw;
; 542  : 
; 543  :     if (pGIBLK->pCMPSCBLK->nLen2 < 13) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 0d	 cmp	 QWORD PTR [rax+8], 13
  00016	73 07		 jae	 SHORT $LN2@z900_Get8I
  00018	32 c0		 xor	 al, al
  0001a	e9 89 01 00 00	 jmp	 $LN1@z900_Get8I
$LN2@z900_Get8I:

; 544  : 
; 545  :     b  = fetch_op_b ( pGIBLK->pCMPSCBLK->pOp2 + 12, pGIBLK->pMEMBLK );

  0001f	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0002b	48 83 c0 0c	 add	 rax, 12
  0002f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00034	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00038	48 8b c8	 mov	 rcx, rax
  0003b	e8 00 00 00 00	 call	 z900_cmpsc_vfetchb
  00040	88 44 24 20	 mov	 BYTE PTR b$[rsp], al

; 546  :     fw = fetch_op_fw( pGIBLK->pCMPSCBLK->pOp2 +  8, pGIBLK->pMEMBLK );

  00044	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00049	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004c	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  00050	48 83 c0 08	 add	 rax, 8
  00054	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00059	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0005d	48 8b c8	 mov	 rcx, rax
  00060	e8 00 00 00 00	 call	 z900_cmpsc_vfetch4
  00065	89 44 24 24	 mov	 DWORD PTR fw$[rsp], eax

; 547  :     dw = fetch_op_dw( pGIBLK->pCMPSCBLK->pOp2 +  0, pGIBLK->pMEMBLK );

  00069	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00076	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0007a	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  0007e	e8 00 00 00 00	 call	 z900_cmpsc_vfetch8
  00083	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 548  : 
; 549  :     *(pGIBLK->pIndex + 7) = ( ((U16) b)  | (((U16) fw) << 8) ) & 0x1FFF; fw >>=  5;

  00088	0f b6 44 24 20	 movzx	 eax, BYTE PTR b$[rsp]
  0008d	0f b7 4c 24 24	 movzx	 ecx, WORD PTR fw$[rsp]
  00092	c1 e1 08	 shl	 ecx, 8
  00095	0b c1		 or	 eax, ecx
  00097	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  0009c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000a1	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000a5	66 89 41 0e	 mov	 WORD PTR [rcx+14], ax
  000a9	8b 44 24 24	 mov	 eax, DWORD PTR fw$[rsp]
  000ad	c1 e8 05	 shr	 eax, 5
  000b0	89 44 24 24	 mov	 DWORD PTR fw$[rsp], eax

; 550  :     *(pGIBLK->pIndex + 6) = (  (U16) fw                      ) & 0x1FFF; fw >>= 13;

  000b4	0f b7 44 24 24	 movzx	 eax, WORD PTR fw$[rsp]
  000b9	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  000be	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000c3	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000c7	66 89 41 0c	 mov	 WORD PTR [rcx+12], ax
  000cb	8b 44 24 24	 mov	 eax, DWORD PTR fw$[rsp]
  000cf	c1 e8 0d	 shr	 eax, 13
  000d2	89 44 24 24	 mov	 DWORD PTR fw$[rsp], eax

; 551  :     *(pGIBLK->pIndex + 5) = (  (U16) fw                      ) & 0x1FFF; fw >>= 13;

  000d6	0f b7 44 24 24	 movzx	 eax, WORD PTR fw$[rsp]
  000db	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  000e0	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000e5	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000e9	66 89 41 0a	 mov	 WORD PTR [rcx+10], ax
  000ed	8b 44 24 24	 mov	 eax, DWORD PTR fw$[rsp]
  000f1	c1 e8 0d	 shr	 eax, 13
  000f4	89 44 24 24	 mov	 DWORD PTR fw$[rsp], eax

; 552  :     *(pGIBLK->pIndex + 4) = ( ((U16) fw) | (((U16) dw) << 1) ) & 0x1FFF; dw >>= 12;

  000f8	0f b7 44 24 24	 movzx	 eax, WORD PTR fw$[rsp]
  000fd	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  00102	d1 e1		 shl	 ecx, 1
  00104	0b c1		 or	 eax, ecx
  00106	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  0010b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00110	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00114	66 89 41 08	 mov	 WORD PTR [rcx+8], ax
  00118	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0011d	48 c1 e8 0c	 shr	 rax, 12
  00121	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 553  :     *(pGIBLK->pIndex + 3) = (                (U16) dw        ) & 0x1FFF; dw >>= 13;

  00126	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  0012b	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  00130	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00135	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00139	66 89 41 06	 mov	 WORD PTR [rcx+6], ax
  0013d	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00142	48 c1 e8 0d	 shr	 rax, 13
  00146	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 554  :     *(pGIBLK->pIndex + 2) = (                (U16) dw        ) & 0x1FFF; dw >>= 13;

  0014b	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00150	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  00155	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0015a	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0015e	66 89 41 04	 mov	 WORD PTR [rcx+4], ax
  00162	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00167	48 c1 e8 0d	 shr	 rax, 13
  0016b	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 555  :     *(pGIBLK->pIndex + 1) = (                (U16) dw        ) & 0x1FFF; dw >>= 13;

  00170	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00175	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  0017a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0017f	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00183	66 89 41 02	 mov	 WORD PTR [rcx+2], ax
  00187	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0018c	48 c1 e8 0d	 shr	 rax, 13
  00190	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 556  :     *(pGIBLK->pIndex + 0) = (                (U16) dw        );

  00195	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0019a	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0019e	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  001a3	66 89 08	 mov	 WORD PTR [rax], cx

; 557  : 
; 558  :     return  13;

  001a6	b0 0d		 mov	 al, 13
$LN1@z900_Get8I:

; 559  : }

  001a8	48 83 c4 38	 add	 rsp, 56			; 00000038H
  001ac	c3		 ret	 0
z900_Get8Index013 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
fw$ = 32
dw$ = 40
pGIBLK$ = 64
z900_Get8Index012 PROC

; 503  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 504  :     register U32 fw;
; 505  :     register U64 dw;
; 506  : 
; 507  :     if (pGIBLK->pCMPSCBLK->nLen2 < 12) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 0c	 cmp	 QWORD PTR [rax+8], 12
  00016	73 07		 jae	 SHORT $LN2@z900_Get8I
  00018	32 c0		 xor	 al, al
  0001a	e9 5e 01 00 00	 jmp	 $LN1@z900_Get8I
$LN2@z900_Get8I:

; 508  : 
; 509  :     fw = fetch_op_fw( pGIBLK->pCMPSCBLK->pOp2 + 8, pGIBLK->pMEMBLK );

  0001f	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0002b	48 83 c0 08	 add	 rax, 8
  0002f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00034	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00038	48 8b c8	 mov	 rcx, rax
  0003b	e8 00 00 00 00	 call	 z900_cmpsc_vfetch4
  00040	89 44 24 20	 mov	 DWORD PTR fw$[rsp], eax

; 510  :     dw = fetch_op_dw( pGIBLK->pCMPSCBLK->pOp2 + 0, pGIBLK->pMEMBLK );

  00044	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00049	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00055	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00059	e8 00 00 00 00	 call	 z900_cmpsc_vfetch8
  0005e	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 511  : 
; 512  :     *(pGIBLK->pIndex + 7) = (  (U16) fw                      ) & 0x0FFF; fw >>= 12;

  00063	0f b7 44 24 20	 movzx	 eax, WORD PTR fw$[rsp]
  00068	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0006d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00072	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00076	66 89 41 0e	 mov	 WORD PTR [rcx+14], ax
  0007a	8b 44 24 20	 mov	 eax, DWORD PTR fw$[rsp]
  0007e	c1 e8 0c	 shr	 eax, 12
  00081	89 44 24 20	 mov	 DWORD PTR fw$[rsp], eax

; 513  :     *(pGIBLK->pIndex + 6) = (  (U16) fw                      ) & 0x0FFF; fw >>= 12;

  00085	0f b7 44 24 20	 movzx	 eax, WORD PTR fw$[rsp]
  0008a	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0008f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00094	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00098	66 89 41 0c	 mov	 WORD PTR [rcx+12], ax
  0009c	8b 44 24 20	 mov	 eax, DWORD PTR fw$[rsp]
  000a0	c1 e8 0c	 shr	 eax, 12
  000a3	89 44 24 20	 mov	 DWORD PTR fw$[rsp], eax

; 514  :     *(pGIBLK->pIndex + 5) = ( ((U16) fw) | (((U16) dw) << 8) ) & 0x0FFF; dw >>=  4;

  000a7	0f b7 44 24 20	 movzx	 eax, WORD PTR fw$[rsp]
  000ac	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  000b1	c1 e1 08	 shl	 ecx, 8
  000b4	0b c1		 or	 eax, ecx
  000b6	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  000bb	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000c0	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000c4	66 89 41 0a	 mov	 WORD PTR [rcx+10], ax
  000c8	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000cd	48 c1 e8 04	 shr	 rax, 4
  000d1	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 515  :     *(pGIBLK->pIndex + 4) = (                (U16) dw        ) & 0x0FFF; dw >>= 12;

  000d6	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  000db	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  000e0	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000e5	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000e9	66 89 41 08	 mov	 WORD PTR [rcx+8], ax
  000ed	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000f2	48 c1 e8 0c	 shr	 rax, 12
  000f6	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 516  :     *(pGIBLK->pIndex + 3) = (                (U16) dw        ) & 0x0FFF; dw >>= 12;

  000fb	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00100	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  00105	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0010a	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0010e	66 89 41 06	 mov	 WORD PTR [rcx+6], ax
  00112	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00117	48 c1 e8 0c	 shr	 rax, 12
  0011b	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 517  :     *(pGIBLK->pIndex + 2) = (                (U16) dw        ) & 0x0FFF; dw >>= 12;

  00120	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00125	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0012a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0012f	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00133	66 89 41 04	 mov	 WORD PTR [rcx+4], ax
  00137	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0013c	48 c1 e8 0c	 shr	 rax, 12
  00140	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 518  :     *(pGIBLK->pIndex + 1) = (                (U16) dw        ) & 0x0FFF; dw >>= 12;

  00145	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  0014a	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0014f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00154	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00158	66 89 41 02	 mov	 WORD PTR [rcx+2], ax
  0015c	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00161	48 c1 e8 0c	 shr	 rax, 12
  00165	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 519  :     *(pGIBLK->pIndex + 0) = (                (U16) dw        );

  0016a	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0016f	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00173	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  00178	66 89 08	 mov	 WORD PTR [rax], cx

; 520  : 
; 521  :     return  12;

  0017b	b0 0c		 mov	 al, 12
$LN1@z900_Get8I:

; 522  : }

  0017d	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00181	c3		 ret	 0
z900_Get8Index012 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
b$ = 32
hw$ = 36
dw$ = 40
pGIBLK$ = 64
z900_Get8Index011 PROC

; 469  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 470  :     register U8  b;
; 471  :     register U16 hw;
; 472  :     register U64 dw;
; 473  : 
; 474  :     if (pGIBLK->pCMPSCBLK->nLen2 < 11) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 0b	 cmp	 QWORD PTR [rax+8], 11
  00016	73 07		 jae	 SHORT $LN2@z900_Get8I
  00018	32 c0		 xor	 al, al
  0001a	e9 94 01 00 00	 jmp	 $LN1@z900_Get8I
$LN2@z900_Get8I:

; 475  : 
; 476  :     b  = fetch_op_b ( pGIBLK->pCMPSCBLK->pOp2 + 10, pGIBLK->pMEMBLK );

  0001f	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0002b	48 83 c0 0a	 add	 rax, 10
  0002f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00034	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00038	48 8b c8	 mov	 rcx, rax
  0003b	e8 00 00 00 00	 call	 z900_cmpsc_vfetchb
  00040	88 44 24 20	 mov	 BYTE PTR b$[rsp], al

; 477  :     hw = fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2 +  8, pGIBLK->pMEMBLK );

  00044	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00049	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004c	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  00050	48 83 c0 08	 add	 rax, 8
  00054	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00059	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0005d	48 8b c8	 mov	 rcx, rax
  00060	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00065	66 89 44 24 24	 mov	 WORD PTR hw$[rsp], ax

; 478  :     dw = fetch_op_dw( pGIBLK->pCMPSCBLK->pOp2 +  0, pGIBLK->pMEMBLK );

  0006a	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0006f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00072	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00077	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0007b	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  0007f	e8 00 00 00 00	 call	 z900_cmpsc_vfetch8
  00084	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 479  : 
; 480  :     *(pGIBLK->pIndex + 7) = ( ((U16) b) | (       hw  << 8) ) & 0x07FF; hw >>=  3;

  00089	0f b6 44 24 20	 movzx	 eax, BYTE PTR b$[rsp]
  0008e	0f b7 4c 24 24	 movzx	 ecx, WORD PTR hw$[rsp]
  00093	c1 e1 08	 shl	 ecx, 8
  00096	0b c1		 or	 eax, ecx
  00098	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  0009d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000a2	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000a6	66 89 41 0e	 mov	 WORD PTR [rcx+14], ax
  000aa	0f b7 44 24 24	 movzx	 eax, WORD PTR hw$[rsp]
  000af	66 c1 e8 03	 shr	 ax, 3
  000b3	66 89 44 24 24	 mov	 WORD PTR hw$[rsp], ax

; 481  :     *(pGIBLK->pIndex + 6) = (    hw                         ) & 0x07FF; hw >>= 11;

  000b8	0f b7 44 24 24	 movzx	 eax, WORD PTR hw$[rsp]
  000bd	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  000c2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000c7	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000cb	66 89 41 0c	 mov	 WORD PTR [rcx+12], ax
  000cf	0f b7 44 24 24	 movzx	 eax, WORD PTR hw$[rsp]
  000d4	66 c1 e8 0b	 shr	 ax, 11
  000d8	66 89 44 24 24	 mov	 WORD PTR hw$[rsp], ax

; 482  :     *(pGIBLK->pIndex + 5) = (    hw     | (((U16) dw) << 2) ) & 0x07FF; dw >>=  9;

  000dd	0f b7 44 24 24	 movzx	 eax, WORD PTR hw$[rsp]
  000e2	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  000e7	c1 e1 02	 shl	 ecx, 2
  000ea	0b c1		 or	 eax, ecx
  000ec	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  000f1	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000f6	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000fa	66 89 41 0a	 mov	 WORD PTR [rcx+10], ax
  000fe	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00103	48 c1 e8 09	 shr	 rax, 9
  00107	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 483  :     *(pGIBLK->pIndex + 4) = (               (U16) dw        ) & 0x07FF; dw >>= 11;

  0010c	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00111	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  00116	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0011b	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0011f	66 89 41 08	 mov	 WORD PTR [rcx+8], ax
  00123	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00128	48 c1 e8 0b	 shr	 rax, 11
  0012c	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 484  :     *(pGIBLK->pIndex + 3) = (               (U16) dw        ) & 0x07FF; dw >>= 11;

  00131	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00136	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  0013b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00140	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00144	66 89 41 06	 mov	 WORD PTR [rcx+6], ax
  00148	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0014d	48 c1 e8 0b	 shr	 rax, 11
  00151	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 485  :     *(pGIBLK->pIndex + 2) = (               (U16) dw        ) & 0x07FF; dw >>= 11;

  00156	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  0015b	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  00160	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00165	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00169	66 89 41 04	 mov	 WORD PTR [rcx+4], ax
  0016d	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00172	48 c1 e8 0b	 shr	 rax, 11
  00176	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 486  :     *(pGIBLK->pIndex + 1) = (               (U16) dw        ) & 0x07FF; dw >>= 11;

  0017b	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00180	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  00185	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0018a	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0018e	66 89 41 02	 mov	 WORD PTR [rcx+2], ax
  00192	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00197	48 c1 e8 0b	 shr	 rax, 11
  0019b	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 487  :     *(pGIBLK->pIndex + 0) = (               (U16) dw        );

  001a0	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  001a5	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  001a9	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  001ae	66 89 08	 mov	 WORD PTR [rax], cx

; 488  : 
; 489  :     return  11;

  001b1	b0 0b		 mov	 al, 11
$LN1@z900_Get8I:

; 490  : }

  001b3	48 83 c4 38	 add	 rsp, 56			; 00000038H
  001b7	c3		 ret	 0
z900_Get8Index011 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
hw$ = 32
dw$ = 40
pGIBLK$ = 64
z900_Get8Index010 PROC

; 434  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 435  :     register U16 hw;
; 436  :     register U64 dw;
; 437  : 
; 438  :     if (pGIBLK->pCMPSCBLK->nLen2 < 10) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 0a	 cmp	 QWORD PTR [rax+8], 10
  00016	73 07		 jae	 SHORT $LN2@z900_Get8I
  00018	32 c0		 xor	 al, al
  0001a	e9 65 01 00 00	 jmp	 $LN1@z900_Get8I
$LN2@z900_Get8I:

; 439  : 
; 440  :     hw = fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2 + 8, pGIBLK->pMEMBLK );

  0001f	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0002b	48 83 c0 08	 add	 rax, 8
  0002f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00034	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00038	48 8b c8	 mov	 rcx, rax
  0003b	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00040	66 89 44 24 20	 mov	 WORD PTR hw$[rsp], ax

; 441  :     dw = fetch_op_dw( pGIBLK->pCMPSCBLK->pOp2 + 0, pGIBLK->pMEMBLK );

  00045	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00052	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00056	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  0005a	e8 00 00 00 00	 call	 z900_cmpsc_vfetch8
  0005f	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 442  : 
; 443  :     *(pGIBLK->pIndex + 7) = ( hw                     ) & 0x03FF; hw >>= 10;

  00064	0f b7 44 24 20	 movzx	 eax, WORD PTR hw$[rsp]
  00069	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0006e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00073	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00077	66 89 41 0e	 mov	 WORD PTR [rcx+14], ax
  0007b	0f b7 44 24 20	 movzx	 eax, WORD PTR hw$[rsp]
  00080	66 c1 e8 0a	 shr	 ax, 10
  00084	66 89 44 24 20	 mov	 WORD PTR hw$[rsp], ax

; 444  :     *(pGIBLK->pIndex + 6) = ( hw | (((U16) dw) << 6) ) & 0x03FF; dw >>=  4;

  00089	0f b7 44 24 20	 movzx	 eax, WORD PTR hw$[rsp]
  0008e	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  00093	c1 e1 06	 shl	 ecx, 6
  00096	0b c1		 or	 eax, ecx
  00098	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0009d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000a2	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000a6	66 89 41 0c	 mov	 WORD PTR [rcx+12], ax
  000aa	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000af	48 c1 e8 04	 shr	 rax, 4
  000b3	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 445  :     *(pGIBLK->pIndex + 5) = (        (U16) dw        ) & 0x03FF; dw >>= 10;

  000b8	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  000bd	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  000c2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000c7	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000cb	66 89 41 0a	 mov	 WORD PTR [rcx+10], ax
  000cf	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000d4	48 c1 e8 0a	 shr	 rax, 10
  000d8	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 446  :     *(pGIBLK->pIndex + 4) = (        (U16) dw        ) & 0x03FF; dw >>= 10;

  000dd	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  000e2	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  000e7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000ec	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000f0	66 89 41 08	 mov	 WORD PTR [rcx+8], ax
  000f4	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000f9	48 c1 e8 0a	 shr	 rax, 10
  000fd	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 447  :     *(pGIBLK->pIndex + 3) = (        (U16) dw        ) & 0x03FF; dw >>= 10;

  00102	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00107	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0010c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00111	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00115	66 89 41 06	 mov	 WORD PTR [rcx+6], ax
  00119	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0011e	48 c1 e8 0a	 shr	 rax, 10
  00122	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 448  :     *(pGIBLK->pIndex + 2) = (        (U16) dw        ) & 0x03FF; dw >>= 10;

  00127	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  0012c	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  00131	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00136	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0013a	66 89 41 04	 mov	 WORD PTR [rcx+4], ax
  0013e	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00143	48 c1 e8 0a	 shr	 rax, 10
  00147	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 449  :     *(pGIBLK->pIndex + 1) = (        (U16) dw        ) & 0x03FF; dw >>= 10;

  0014c	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00151	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  00156	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0015b	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0015f	66 89 41 02	 mov	 WORD PTR [rcx+2], ax
  00163	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00168	48 c1 e8 0a	 shr	 rax, 10
  0016c	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 450  :     *(pGIBLK->pIndex + 0) = (        (U16) dw        );

  00171	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00176	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0017a	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  0017f	66 89 08	 mov	 WORD PTR [rax], cx

; 451  : 
; 452  :     return  10;

  00182	b0 0a		 mov	 al, 10
$LN1@z900_Get8I:

; 453  : }

  00184	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00188	c3		 ret	 0
z900_Get8Index010 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
b$ = 32
dw$ = 40
pGIBLK$ = 64
z900_Get8Index009 PROC

; 403  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 404  :     register U8  b;
; 405  :     register U64 dw;
; 406  : 
; 407  :     if (pGIBLK->pCMPSCBLK->nLen2 <  9) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 09	 cmp	 QWORD PTR [rax+8], 9
  00016	73 07		 jae	 SHORT $LN2@z900_Get8I
  00018	32 c0		 xor	 al, al
  0001a	e9 63 01 00 00	 jmp	 $LN1@z900_Get8I
$LN2@z900_Get8I:

; 408  : 
; 409  :     b  = fetch_op_b ( pGIBLK->pCMPSCBLK->pOp2 + 8, pGIBLK->pMEMBLK );

  0001f	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0002b	48 83 c0 08	 add	 rax, 8
  0002f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00034	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00038	48 8b c8	 mov	 rcx, rax
  0003b	e8 00 00 00 00	 call	 z900_cmpsc_vfetchb
  00040	88 44 24 20	 mov	 BYTE PTR b$[rsp], al

; 410  :     dw = fetch_op_dw( pGIBLK->pCMPSCBLK->pOp2 + 0, pGIBLK->pMEMBLK );

  00044	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00049	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00055	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00059	e8 00 00 00 00	 call	 z900_cmpsc_vfetch8
  0005e	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 411  : 
; 412  :     *(pGIBLK->pIndex + 7) = ( ((U16) b) | (((U16) dw) << 8) ) & 0x01FF; dw >>= 1;

  00063	0f b6 44 24 20	 movzx	 eax, BYTE PTR b$[rsp]
  00068	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  0006d	c1 e1 08	 shl	 ecx, 8
  00070	0b c1		 or	 eax, ecx
  00072	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  00077	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0007c	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00080	66 89 41 0e	 mov	 WORD PTR [rcx+14], ax
  00084	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00089	48 d1 e8	 shr	 rax, 1
  0008c	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 413  :     *(pGIBLK->pIndex + 6) = (               (U16) dw        ) & 0x01FF; dw >>= 9;

  00091	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00096	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  0009b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000a0	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000a4	66 89 41 0c	 mov	 WORD PTR [rcx+12], ax
  000a8	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000ad	48 c1 e8 09	 shr	 rax, 9
  000b1	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 414  :     *(pGIBLK->pIndex + 5) = (               (U16) dw        ) & 0x01FF; dw >>= 9;

  000b6	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  000bb	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  000c0	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000c5	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000c9	66 89 41 0a	 mov	 WORD PTR [rcx+10], ax
  000cd	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000d2	48 c1 e8 09	 shr	 rax, 9
  000d6	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 415  :     *(pGIBLK->pIndex + 4) = (               (U16) dw        ) & 0x01FF; dw >>= 9;

  000db	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  000e0	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  000e5	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000ea	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000ee	66 89 41 08	 mov	 WORD PTR [rcx+8], ax
  000f2	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000f7	48 c1 e8 09	 shr	 rax, 9
  000fb	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 416  :     *(pGIBLK->pIndex + 3) = (               (U16) dw        ) & 0x01FF; dw >>= 9;

  00100	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00105	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  0010a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0010f	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00113	66 89 41 06	 mov	 WORD PTR [rcx+6], ax
  00117	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0011c	48 c1 e8 09	 shr	 rax, 9
  00120	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 417  :     *(pGIBLK->pIndex + 2) = (               (U16) dw        ) & 0x01FF; dw >>= 9;

  00125	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  0012a	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  0012f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00134	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00138	66 89 41 04	 mov	 WORD PTR [rcx+4], ax
  0013c	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00141	48 c1 e8 09	 shr	 rax, 9
  00145	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 418  :     *(pGIBLK->pIndex + 1) = (               (U16) dw        ) & 0x01FF; dw >>= 9;

  0014a	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  0014f	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  00154	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00159	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0015d	66 89 41 02	 mov	 WORD PTR [rcx+2], ax
  00161	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00166	48 c1 e8 09	 shr	 rax, 9
  0016a	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 419  :     *(pGIBLK->pIndex + 0) = (               (U16) dw        );

  0016f	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00174	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00178	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  0017d	66 89 08	 mov	 WORD PTR [rax], cx

; 420  : 
; 421  :     return  9;

  00180	b0 09		 mov	 al, 9
$LN1@z900_Get8I:

; 422  : }

  00182	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00186	c3		 ret	 0
z900_Get8Index009 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
z900_GetIndex713 PROC

; 383  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 384  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 76		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 385  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x01FF) << 4)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  0003e	c1 e0 04	 shl	 eax, 4
  00041	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00045	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0004a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004d	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00051	48 83 c1 02	 add	 rcx, 2
  00055	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  0005a	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005e	e8 00 00 00 00	 call	 z900_cmpsc_vfetchb
  00063	0f b6 c0	 movzx	 eax, al
  00066	c1 f8 04	 sar	 eax, 4
  00069	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006d	0b c8		 or	 ecx, eax
  0006f	8b c1		 mov	 eax, ecx
  00071	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00076	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0007a	66 89 01	 mov	 WORD PTR [rcx], ax

; 386  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 4);
; 387  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex413 );

  0007d	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00082	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00086	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex413
  0008d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 388  :     return 2;

  00090	b0 02		 mov	 al, 2
$LN1@z900_GetIn:

; 389  : }

  00092	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00096	c3		 ret	 0
z900_GetIndex713 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
z900_GetIndex613 PROC

; 375  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 376  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 76		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 377  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x03FF) << 3)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0003e	c1 e0 03	 shl	 eax, 3
  00041	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00045	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0004a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004d	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00051	48 83 c1 02	 add	 rcx, 2
  00055	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  0005a	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005e	e8 00 00 00 00	 call	 z900_cmpsc_vfetchb
  00063	0f b6 c0	 movzx	 eax, al
  00066	c1 f8 05	 sar	 eax, 5
  00069	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006d	0b c8		 or	 ecx, eax
  0006f	8b c1		 mov	 eax, ecx
  00071	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00076	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0007a	66 89 01	 mov	 WORD PTR [rcx], ax

; 378  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 5);
; 379  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex313 );

  0007d	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00082	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00086	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex313
  0008d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 380  :     return 2;

  00090	b0 02		 mov	 al, 2
$LN1@z900_GetIn:

; 381  : }

  00092	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00096	c3		 ret	 0
z900_GetIndex613 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
z900_GetIndex513 PROC

; 367  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 368  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 76		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 369  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x07FF) << 2)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  0003e	c1 e0 02	 shl	 eax, 2
  00041	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00045	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0004a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004d	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00051	48 83 c1 02	 add	 rcx, 2
  00055	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  0005a	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005e	e8 00 00 00 00	 call	 z900_cmpsc_vfetchb
  00063	0f b6 c0	 movzx	 eax, al
  00066	c1 f8 06	 sar	 eax, 6
  00069	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006d	0b c8		 or	 ecx, eax
  0006f	8b c1		 mov	 eax, ecx
  00071	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00076	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0007a	66 89 01	 mov	 WORD PTR [rcx], ax

; 370  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 6);
; 371  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex213 );

  0007d	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00082	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00086	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex213
  0008d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 372  :     return 2;

  00090	b0 02		 mov	 al, 2
$LN1@z900_GetIn:

; 373  : }

  00092	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00096	c3		 ret	 0
z900_GetIndex513 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
z900_GetIndex413 PROC

; 359  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 360  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 75		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 361  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x0FFF) << 1)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0003e	d1 e0		 shl	 eax, 1
  00040	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00044	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00049	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004c	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00050	48 83 c1 02	 add	 rcx, 2
  00054	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00059	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005d	e8 00 00 00 00	 call	 z900_cmpsc_vfetchb
  00062	0f b6 c0	 movzx	 eax, al
  00065	c1 f8 07	 sar	 eax, 7
  00068	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006c	0b c8		 or	 ecx, eax
  0006e	8b c1		 mov	 eax, ecx
  00070	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00075	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00079	66 89 01	 mov	 WORD PTR [rcx], ax

; 362  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 7);
; 363  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex113 );

  0007c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00081	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00085	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex113
  0008c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 364  :     return 2;

  0008f	b0 02		 mov	 al, 2
$LN1@z900_GetIn:

; 365  : }

  00091	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00095	c3		 ret	 0
z900_GetIndex413 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex313 PROC

; 352  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 353  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 43		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 354  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x1FFF);

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00043	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00047	66 89 01	 mov	 WORD PTR [rcx], ax

; 355  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex013 );

  0004a	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004f	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00053	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex013
  0005a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 356  :     return 2;

  0005d	b0 02		 mov	 al, 2
$LN1@z900_GetIn:

; 357  : }

  0005f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00063	c3		 ret	 0
z900_GetIndex313 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex213 PROC

; 345  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 346  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 347  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x3FFF) >> 1;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 3f 00 00	 and	 eax, 16383		; 00003fffH
  0003e	d1 f8		 sar	 eax, 1
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 348  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex713 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex713
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 349  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 350  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
z900_GetIndex213 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex113 PROC

; 338  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 339  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 46		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 340  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x7FFF) >> 2;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 7f 00 00	 and	 eax, 32767		; 00007fffH
  0003e	c1 f8 02	 sar	 eax, 2
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00046	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0004a	66 89 01	 mov	 WORD PTR [rcx], ax

; 341  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex613 );

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00052	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00056	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex613
  0005d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 342  :     return 1;

  00060	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 343  : }

  00062	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00066	c3		 ret	 0
z900_GetIndex113 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex013 PROC

; 331  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 332  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 41		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 333  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK )         ) >> 3;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	c1 f8 03	 sar	 eax, 3
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00041	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00045	66 89 01	 mov	 WORD PTR [rcx], ax

; 334  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex513 );

  00048	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004d	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00051	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex513
  00058	48 89 08	 mov	 QWORD PTR [rax], rcx

; 335  :     return 1;

  0005b	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 336  : }

  0005d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00061	c3		 ret	 0
z900_GetIndex013 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
z900_GetIndex712 PROC

; 317  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 318  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 76		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 319  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x01FF) << 3)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  0003e	c1 e0 03	 shl	 eax, 3
  00041	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00045	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0004a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004d	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00051	48 83 c1 02	 add	 rcx, 2
  00055	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  0005a	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005e	e8 00 00 00 00	 call	 z900_cmpsc_vfetchb
  00063	0f b6 c0	 movzx	 eax, al
  00066	c1 f8 05	 sar	 eax, 5
  00069	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006d	0b c8		 or	 ecx, eax
  0006f	8b c1		 mov	 eax, ecx
  00071	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00076	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0007a	66 89 01	 mov	 WORD PTR [rcx], ax

; 320  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 5);
; 321  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex312 );

  0007d	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00082	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00086	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex312
  0008d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 322  :     return 2;

  00090	b0 02		 mov	 al, 2
$LN1@z900_GetIn:

; 323  : }

  00092	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00096	c3		 ret	 0
z900_GetIndex712 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
z900_GetIndex612 PROC

; 309  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 310  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 76		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 311  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x03FF) << 2)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0003e	c1 e0 02	 shl	 eax, 2
  00041	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00045	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0004a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004d	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00051	48 83 c1 02	 add	 rcx, 2
  00055	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  0005a	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005e	e8 00 00 00 00	 call	 z900_cmpsc_vfetchb
  00063	0f b6 c0	 movzx	 eax, al
  00066	c1 f8 06	 sar	 eax, 6
  00069	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006d	0b c8		 or	 ecx, eax
  0006f	8b c1		 mov	 eax, ecx
  00071	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00076	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0007a	66 89 01	 mov	 WORD PTR [rcx], ax

; 312  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 6);
; 313  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex212 );

  0007d	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00082	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00086	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex212
  0008d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 314  :     return 2;

  00090	b0 02		 mov	 al, 2
$LN1@z900_GetIn:

; 315  : }

  00092	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00096	c3		 ret	 0
z900_GetIndex612 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
z900_GetIndex512 PROC

; 301  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 302  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 75		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 303  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x07FF) << 1)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  0003e	d1 e0		 shl	 eax, 1
  00040	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00044	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00049	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004c	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00050	48 83 c1 02	 add	 rcx, 2
  00054	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00059	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005d	e8 00 00 00 00	 call	 z900_cmpsc_vfetchb
  00062	0f b6 c0	 movzx	 eax, al
  00065	c1 f8 07	 sar	 eax, 7
  00068	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006c	0b c8		 or	 ecx, eax
  0006e	8b c1		 mov	 eax, ecx
  00070	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00075	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00079	66 89 01	 mov	 WORD PTR [rcx], ax

; 304  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 7);
; 305  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex112 );

  0007c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00081	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00085	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex112
  0008c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 306  :     return 2;

  0008f	b0 02		 mov	 al, 2
$LN1@z900_GetIn:

; 307  : }

  00091	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00095	c3		 ret	 0
z900_GetIndex512 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex412 PROC

; 294  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 295  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 43		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 296  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x0FFF);

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00043	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00047	66 89 01	 mov	 WORD PTR [rcx], ax

; 297  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex012 );

  0004a	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004f	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00053	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex012
  0005a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 298  :     return 2;

  0005d	b0 02		 mov	 al, 2
$LN1@z900_GetIn:

; 299  : }

  0005f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00063	c3		 ret	 0
z900_GetIndex412 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex312 PROC

; 287  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 288  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 289  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x1FFF) >> 1;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  0003e	d1 f8		 sar	 eax, 1
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 290  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex712 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex712
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 291  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 292  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
z900_GetIndex312 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex212 PROC

; 280  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 281  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 46		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 282  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x3FFF) >> 2;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 3f 00 00	 and	 eax, 16383		; 00003fffH
  0003e	c1 f8 02	 sar	 eax, 2
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00046	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0004a	66 89 01	 mov	 WORD PTR [rcx], ax

; 283  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex612 );

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00052	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00056	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex612
  0005d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 284  :     return 1;

  00060	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 285  : }

  00062	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00066	c3		 ret	 0
z900_GetIndex212 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex112 PROC

; 273  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 274  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 46		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 275  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x7FFF) >> 3;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 7f 00 00	 and	 eax, 32767		; 00007fffH
  0003e	c1 f8 03	 sar	 eax, 3
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00046	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0004a	66 89 01	 mov	 WORD PTR [rcx], ax

; 276  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex512 );

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00052	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00056	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex512
  0005d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 277  :     return 1;

  00060	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 278  : }

  00062	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00066	c3		 ret	 0
z900_GetIndex112 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex012 PROC

; 266  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 267  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 41		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 268  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK )         ) >> 4;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	c1 f8 04	 sar	 eax, 4
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00041	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00045	66 89 01	 mov	 WORD PTR [rcx], ax

; 269  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex412 );

  00048	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004d	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00051	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex412
  00058	48 89 08	 mov	 QWORD PTR [rax], rcx

; 270  :     return 1;

  0005b	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 271  : }

  0005d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00061	c3		 ret	 0
z900_GetIndex012 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
z900_GetIndex711 PROC

; 252  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 253  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 76		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 254  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x01FF) << 2)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  0003e	c1 e0 02	 shl	 eax, 2
  00041	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00045	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0004a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004d	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00051	48 83 c1 02	 add	 rcx, 2
  00055	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  0005a	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005e	e8 00 00 00 00	 call	 z900_cmpsc_vfetchb
  00063	0f b6 c0	 movzx	 eax, al
  00066	c1 f8 06	 sar	 eax, 6
  00069	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006d	0b c8		 or	 ecx, eax
  0006f	8b c1		 mov	 eax, ecx
  00071	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00076	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0007a	66 89 01	 mov	 WORD PTR [rcx], ax

; 255  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 6);
; 256  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex211 );

  0007d	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00082	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00086	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex211
  0008d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 257  :     return 2;

  00090	b0 02		 mov	 al, 2
$LN1@z900_GetIn:

; 258  : }

  00092	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00096	c3		 ret	 0
z900_GetIndex711 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
z900_GetIndex611 PROC

; 244  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 245  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 75		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 246  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x03FF) << 1)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0003e	d1 e0		 shl	 eax, 1
  00040	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00044	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00049	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004c	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00050	48 83 c1 02	 add	 rcx, 2
  00054	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00059	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005d	e8 00 00 00 00	 call	 z900_cmpsc_vfetchb
  00062	0f b6 c0	 movzx	 eax, al
  00065	c1 f8 07	 sar	 eax, 7
  00068	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006c	0b c8		 or	 ecx, eax
  0006e	8b c1		 mov	 eax, ecx
  00070	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00075	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00079	66 89 01	 mov	 WORD PTR [rcx], ax

; 247  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 7);
; 248  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex111 );

  0007c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00081	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00085	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex111
  0008c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 249  :     return 2;

  0008f	b0 02		 mov	 al, 2
$LN1@z900_GetIn:

; 250  : }

  00091	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00095	c3		 ret	 0
z900_GetIndex611 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex511 PROC

; 237  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 238  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 43		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 239  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x07FF);

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00043	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00047	66 89 01	 mov	 WORD PTR [rcx], ax

; 240  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex011 );

  0004a	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004f	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00053	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex011
  0005a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 241  :     return 2;

  0005d	b0 02		 mov	 al, 2
$LN1@z900_GetIn:

; 242  : }

  0005f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00063	c3		 ret	 0
z900_GetIndex511 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex411 PROC

; 230  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 231  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 232  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x0FFF) >> 1;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0003e	d1 f8		 sar	 eax, 1
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 233  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex711 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex711
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 234  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 235  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
z900_GetIndex411 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex311 PROC

; 223  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 224  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 46		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 225  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x1FFF) >> 2;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  0003e	c1 f8 02	 sar	 eax, 2
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00046	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0004a	66 89 01	 mov	 WORD PTR [rcx], ax

; 226  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex611 );

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00052	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00056	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex611
  0005d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 227  :     return 1;

  00060	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 228  : }

  00062	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00066	c3		 ret	 0
z900_GetIndex311 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex211 PROC

; 216  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 217  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 46		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 218  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x3FFF) >> 3;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 3f 00 00	 and	 eax, 16383		; 00003fffH
  0003e	c1 f8 03	 sar	 eax, 3
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00046	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0004a	66 89 01	 mov	 WORD PTR [rcx], ax

; 219  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex511 );

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00052	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00056	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex511
  0005d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 220  :     return 1;

  00060	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 221  : }

  00062	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00066	c3		 ret	 0
z900_GetIndex211 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex111 PROC

; 209  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 210  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 46		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 211  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x7FFF) >> 4;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 7f 00 00	 and	 eax, 32767		; 00007fffH
  0003e	c1 f8 04	 sar	 eax, 4
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00046	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0004a	66 89 01	 mov	 WORD PTR [rcx], ax

; 212  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex411 );

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00052	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00056	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex411
  0005d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 213  :     return 1;

  00060	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 214  : }

  00062	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00066	c3		 ret	 0
z900_GetIndex111 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex011 PROC

; 202  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 203  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 41		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 204  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK )         ) >> 5;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	c1 f8 05	 sar	 eax, 5
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00041	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00045	66 89 01	 mov	 WORD PTR [rcx], ax

; 205  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex311 );

  00048	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004d	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00051	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex311
  00058	48 89 08	 mov	 QWORD PTR [rax], rcx

; 206  :     return 1;

  0005b	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 207  : }

  0005d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00061	c3		 ret	 0
z900_GetIndex011 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
z900_GetIndex710 PROC

; 188  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 189  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 75		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 190  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x01FF) << 1)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  0003e	d1 e0		 shl	 eax, 1
  00040	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00044	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00049	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004c	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00050	48 83 c1 02	 add	 rcx, 2
  00054	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00059	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005d	e8 00 00 00 00	 call	 z900_cmpsc_vfetchb
  00062	0f b6 c0	 movzx	 eax, al
  00065	c1 f8 07	 sar	 eax, 7
  00068	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006c	0b c8		 or	 ecx, eax
  0006e	8b c1		 mov	 eax, ecx
  00070	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00075	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00079	66 89 01	 mov	 WORD PTR [rcx], ax

; 191  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 7);
; 192  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex110 );

  0007c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00081	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00085	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex110
  0008c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 193  :     return 2;

  0008f	b0 02		 mov	 al, 2
$LN1@z900_GetIn:

; 194  : }

  00091	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00095	c3		 ret	 0
z900_GetIndex710 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex610 PROC

; 181  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 182  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 43		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 183  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x03FF);

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00043	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00047	66 89 01	 mov	 WORD PTR [rcx], ax

; 184  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex010 );

  0004a	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004f	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00053	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex010
  0005a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 185  :     return 2;

  0005d	b0 02		 mov	 al, 2
$LN1@z900_GetIn:

; 186  : }

  0005f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00063	c3		 ret	 0
z900_GetIndex610 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex510 PROC

; 174  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 175  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 176  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x07FF) >> 1;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  0003e	d1 f8		 sar	 eax, 1
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 177  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex710 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex710
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 178  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 179  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
z900_GetIndex510 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex410 PROC

; 167  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 168  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 46		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 169  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x0FFF) >> 2;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0003e	c1 f8 02	 sar	 eax, 2
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00046	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0004a	66 89 01	 mov	 WORD PTR [rcx], ax

; 170  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex610 );

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00052	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00056	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex610
  0005d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 171  :     return 1;

  00060	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 172  : }

  00062	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00066	c3		 ret	 0
z900_GetIndex410 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex310 PROC

; 160  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 161  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 46		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 162  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x1FFF) >> 3;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  0003e	c1 f8 03	 sar	 eax, 3
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00046	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0004a	66 89 01	 mov	 WORD PTR [rcx], ax

; 163  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex510 );

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00052	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00056	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex510
  0005d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 164  :     return 1;

  00060	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 165  : }

  00062	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00066	c3		 ret	 0
z900_GetIndex310 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex210 PROC

; 153  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 154  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 46		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 155  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x3FFF) >> 4;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 3f 00 00	 and	 eax, 16383		; 00003fffH
  0003e	c1 f8 04	 sar	 eax, 4
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00046	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0004a	66 89 01	 mov	 WORD PTR [rcx], ax

; 156  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex410 );

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00052	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00056	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex410
  0005d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 157  :     return 1;

  00060	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 158  : }

  00062	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00066	c3		 ret	 0
z900_GetIndex210 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex110 PROC

; 146  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 147  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 46		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 148  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x7FFF) >> 5;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 7f 00 00	 and	 eax, 32767		; 00007fffH
  0003e	c1 f8 05	 sar	 eax, 5
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00046	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0004a	66 89 01	 mov	 WORD PTR [rcx], ax

; 149  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex310 );

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00052	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00056	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex310
  0005d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 150  :     return 1;

  00060	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 151  : }

  00062	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00066	c3		 ret	 0
z900_GetIndex110 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex010 PROC

; 139  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 140  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 41		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 141  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK )         ) >> 6;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	c1 f8 06	 sar	 eax, 6
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00041	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00045	66 89 01	 mov	 WORD PTR [rcx], ax

; 142  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex210 );

  00048	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004d	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00051	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex210
  00058	48 89 08	 mov	 QWORD PTR [rax], rcx

; 143  :     return 1;

  0005b	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 144  : }

  0005d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00061	c3		 ret	 0
z900_GetIndex010 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex709 PROC

; 126  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 127  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 43		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 128  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x01FF);

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00043	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00047	66 89 01	 mov	 WORD PTR [rcx], ax

; 129  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex009 );

  0004a	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004f	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00053	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex009
  0005a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 130  :     return 2;

  0005d	b0 02		 mov	 al, 2
$LN1@z900_GetIn:

; 131  : }

  0005f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00063	c3		 ret	 0
z900_GetIndex709 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex609 PROC

; 119  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 120  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 121  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x03FF) >> 1;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0003e	d1 f8		 sar	 eax, 1
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 122  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex709 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex709
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 123  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 124  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
z900_GetIndex609 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex509 PROC

; 112  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 113  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 46		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 114  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x07FF) >> 2;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  0003e	c1 f8 02	 sar	 eax, 2
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00046	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0004a	66 89 01	 mov	 WORD PTR [rcx], ax

; 115  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex609 );

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00052	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00056	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex609
  0005d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 116  :     return 1;

  00060	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 117  : }

  00062	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00066	c3		 ret	 0
z900_GetIndex509 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex409 PROC

; 105  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 106  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 46		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 107  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x0FFF) >> 3;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0003e	c1 f8 03	 sar	 eax, 3
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00046	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0004a	66 89 01	 mov	 WORD PTR [rcx], ax

; 108  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex509 );

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00052	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00056	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex509
  0005d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 109  :     return 1;

  00060	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 110  : }

  00062	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00066	c3		 ret	 0
z900_GetIndex409 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex309 PROC

; 98   : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 99   :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 46		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 100  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x1FFF) >> 4;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  0003e	c1 f8 04	 sar	 eax, 4
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00046	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0004a	66 89 01	 mov	 WORD PTR [rcx], ax

; 101  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex409 );

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00052	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00056	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex409
  0005d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 102  :     return 1;

  00060	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 103  : }

  00062	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00066	c3		 ret	 0
z900_GetIndex309 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex209 PROC

; 91   : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 92   :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 46		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 93   :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x3FFF) >> 5;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 3f 00 00	 and	 eax, 16383		; 00003fffH
  0003e	c1 f8 05	 sar	 eax, 5
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00046	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0004a	66 89 01	 mov	 WORD PTR [rcx], ax

; 94   :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex309 );

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00052	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00056	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex309
  0005d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 95   :     return 1;

  00060	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 96   : }

  00062	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00066	c3		 ret	 0
z900_GetIndex209 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex109 PROC

; 84   : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 85   :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 46		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 86   :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x7FFF) >> 6;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	25 ff 7f 00 00	 and	 eax, 32767		; 00007fffH
  0003e	c1 f8 06	 sar	 eax, 6
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00046	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0004a	66 89 01	 mov	 WORD PTR [rcx], ax

; 87   :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex209 );

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00052	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00056	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex209
  0005d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 88   :     return 1;

  00060	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 89   : }

  00062	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00066	c3		 ret	 0
z900_GetIndex109 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
z900_GetIndex009 PROC

; 77   : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 78   :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@z900_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 41		 jmp	 SHORT $LN1@z900_GetIn
$LN2@z900_GetIn:

; 79   :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK )         ) >> 7;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00031	e8 00 00 00 00	 call	 z900_cmpsc_vfetch2
  00036	0f b7 c0	 movzx	 eax, ax
  00039	c1 f8 07	 sar	 eax, 7
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00041	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00045	66 89 01	 mov	 WORD PTR [rcx], ax

; 80   :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex109 );

  00048	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004d	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00051	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:z900_GetIndex109
  00058	48 89 08	 mov	 QWORD PTR [rax], rcx

; 81   :     return 1;

  0005b	b0 01		 mov	 al, 1
$LN1@z900_GetIn:

; 82   : }

  0005d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00061	c3		 ret	 0
z900_GetIndex009 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
b$ = 32
fw$ = 36
dw$ = 40
pGIBLK$ = 64
s390_Get8Index013 PROC

; 538  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 539  :     register U8  b;
; 540  :     register U32 fw;
; 541  :     register U64 dw;
; 542  : 
; 543  :     if (pGIBLK->pCMPSCBLK->nLen2 < 13) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 0d	 cmp	 QWORD PTR [rax+8], 13
  00016	73 07		 jae	 SHORT $LN2@s390_Get8I
  00018	32 c0		 xor	 al, al
  0001a	e9 86 01 00 00	 jmp	 $LN1@s390_Get8I
$LN2@s390_Get8I:

; 544  : 
; 545  :     b  = fetch_op_b ( pGIBLK->pCMPSCBLK->pOp2 + 12, pGIBLK->pMEMBLK );

  0001f	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0002b	48 83 c0 0c	 add	 rax, 12
  0002f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00034	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 s390_cmpsc_vfetchb
  0003f	88 44 24 20	 mov	 BYTE PTR b$[rsp], al

; 546  :     fw = fetch_op_fw( pGIBLK->pCMPSCBLK->pOp2 +  8, pGIBLK->pMEMBLK );

  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00048	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004b	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0004f	48 83 c0 08	 add	 rax, 8
  00053	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00058	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0005c	8b c8		 mov	 ecx, eax
  0005e	e8 00 00 00 00	 call	 s390_cmpsc_vfetch4
  00063	89 44 24 24	 mov	 DWORD PTR fw$[rsp], eax

; 547  :     dw = fetch_op_dw( pGIBLK->pCMPSCBLK->pOp2 +  0, pGIBLK->pMEMBLK );

  00067	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0006c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00074	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00078	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  0007b	e8 00 00 00 00	 call	 s390_cmpsc_vfetch8
  00080	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 548  : 
; 549  :     *(pGIBLK->pIndex + 7) = ( ((U16) b)  | (((U16) fw) << 8) ) & 0x1FFF; fw >>=  5;

  00085	0f b6 44 24 20	 movzx	 eax, BYTE PTR b$[rsp]
  0008a	0f b7 4c 24 24	 movzx	 ecx, WORD PTR fw$[rsp]
  0008f	c1 e1 08	 shl	 ecx, 8
  00092	0b c1		 or	 eax, ecx
  00094	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  00099	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0009e	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000a2	66 89 41 0e	 mov	 WORD PTR [rcx+14], ax
  000a6	8b 44 24 24	 mov	 eax, DWORD PTR fw$[rsp]
  000aa	c1 e8 05	 shr	 eax, 5
  000ad	89 44 24 24	 mov	 DWORD PTR fw$[rsp], eax

; 550  :     *(pGIBLK->pIndex + 6) = (  (U16) fw                      ) & 0x1FFF; fw >>= 13;

  000b1	0f b7 44 24 24	 movzx	 eax, WORD PTR fw$[rsp]
  000b6	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  000bb	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000c0	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000c4	66 89 41 0c	 mov	 WORD PTR [rcx+12], ax
  000c8	8b 44 24 24	 mov	 eax, DWORD PTR fw$[rsp]
  000cc	c1 e8 0d	 shr	 eax, 13
  000cf	89 44 24 24	 mov	 DWORD PTR fw$[rsp], eax

; 551  :     *(pGIBLK->pIndex + 5) = (  (U16) fw                      ) & 0x1FFF; fw >>= 13;

  000d3	0f b7 44 24 24	 movzx	 eax, WORD PTR fw$[rsp]
  000d8	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  000dd	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000e2	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000e6	66 89 41 0a	 mov	 WORD PTR [rcx+10], ax
  000ea	8b 44 24 24	 mov	 eax, DWORD PTR fw$[rsp]
  000ee	c1 e8 0d	 shr	 eax, 13
  000f1	89 44 24 24	 mov	 DWORD PTR fw$[rsp], eax

; 552  :     *(pGIBLK->pIndex + 4) = ( ((U16) fw) | (((U16) dw) << 1) ) & 0x1FFF; dw >>= 12;

  000f5	0f b7 44 24 24	 movzx	 eax, WORD PTR fw$[rsp]
  000fa	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  000ff	d1 e1		 shl	 ecx, 1
  00101	0b c1		 or	 eax, ecx
  00103	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  00108	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0010d	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00111	66 89 41 08	 mov	 WORD PTR [rcx+8], ax
  00115	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0011a	48 c1 e8 0c	 shr	 rax, 12
  0011e	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 553  :     *(pGIBLK->pIndex + 3) = (                (U16) dw        ) & 0x1FFF; dw >>= 13;

  00123	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00128	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  0012d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00132	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00136	66 89 41 06	 mov	 WORD PTR [rcx+6], ax
  0013a	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0013f	48 c1 e8 0d	 shr	 rax, 13
  00143	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 554  :     *(pGIBLK->pIndex + 2) = (                (U16) dw        ) & 0x1FFF; dw >>= 13;

  00148	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  0014d	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  00152	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00157	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0015b	66 89 41 04	 mov	 WORD PTR [rcx+4], ax
  0015f	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00164	48 c1 e8 0d	 shr	 rax, 13
  00168	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 555  :     *(pGIBLK->pIndex + 1) = (                (U16) dw        ) & 0x1FFF; dw >>= 13;

  0016d	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00172	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  00177	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0017c	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00180	66 89 41 02	 mov	 WORD PTR [rcx+2], ax
  00184	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00189	48 c1 e8 0d	 shr	 rax, 13
  0018d	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 556  :     *(pGIBLK->pIndex + 0) = (                (U16) dw        );

  00192	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00197	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0019b	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  001a0	66 89 08	 mov	 WORD PTR [rax], cx

; 557  : 
; 558  :     return  13;

  001a3	b0 0d		 mov	 al, 13
$LN1@s390_Get8I:

; 559  : }

  001a5	48 83 c4 38	 add	 rsp, 56			; 00000038H
  001a9	c3		 ret	 0
s390_Get8Index013 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
fw$ = 32
dw$ = 40
pGIBLK$ = 64
s390_Get8Index012 PROC

; 503  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 504  :     register U32 fw;
; 505  :     register U64 dw;
; 506  : 
; 507  :     if (pGIBLK->pCMPSCBLK->nLen2 < 12) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 0c	 cmp	 QWORD PTR [rax+8], 12
  00016	73 07		 jae	 SHORT $LN2@s390_Get8I
  00018	32 c0		 xor	 al, al
  0001a	e9 5c 01 00 00	 jmp	 $LN1@s390_Get8I
$LN2@s390_Get8I:

; 508  : 
; 509  :     fw = fetch_op_fw( pGIBLK->pCMPSCBLK->pOp2 + 8, pGIBLK->pMEMBLK );

  0001f	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0002b	48 83 c0 08	 add	 rax, 8
  0002f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00034	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 s390_cmpsc_vfetch4
  0003f	89 44 24 20	 mov	 DWORD PTR fw$[rsp], eax

; 510  :     dw = fetch_op_dw( pGIBLK->pCMPSCBLK->pOp2 + 0, pGIBLK->pMEMBLK );

  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00048	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00050	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00054	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00057	e8 00 00 00 00	 call	 s390_cmpsc_vfetch8
  0005c	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 511  : 
; 512  :     *(pGIBLK->pIndex + 7) = (  (U16) fw                      ) & 0x0FFF; fw >>= 12;

  00061	0f b7 44 24 20	 movzx	 eax, WORD PTR fw$[rsp]
  00066	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0006b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00070	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00074	66 89 41 0e	 mov	 WORD PTR [rcx+14], ax
  00078	8b 44 24 20	 mov	 eax, DWORD PTR fw$[rsp]
  0007c	c1 e8 0c	 shr	 eax, 12
  0007f	89 44 24 20	 mov	 DWORD PTR fw$[rsp], eax

; 513  :     *(pGIBLK->pIndex + 6) = (  (U16) fw                      ) & 0x0FFF; fw >>= 12;

  00083	0f b7 44 24 20	 movzx	 eax, WORD PTR fw$[rsp]
  00088	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0008d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00092	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00096	66 89 41 0c	 mov	 WORD PTR [rcx+12], ax
  0009a	8b 44 24 20	 mov	 eax, DWORD PTR fw$[rsp]
  0009e	c1 e8 0c	 shr	 eax, 12
  000a1	89 44 24 20	 mov	 DWORD PTR fw$[rsp], eax

; 514  :     *(pGIBLK->pIndex + 5) = ( ((U16) fw) | (((U16) dw) << 8) ) & 0x0FFF; dw >>=  4;

  000a5	0f b7 44 24 20	 movzx	 eax, WORD PTR fw$[rsp]
  000aa	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  000af	c1 e1 08	 shl	 ecx, 8
  000b2	0b c1		 or	 eax, ecx
  000b4	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  000b9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000be	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000c2	66 89 41 0a	 mov	 WORD PTR [rcx+10], ax
  000c6	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000cb	48 c1 e8 04	 shr	 rax, 4
  000cf	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 515  :     *(pGIBLK->pIndex + 4) = (                (U16) dw        ) & 0x0FFF; dw >>= 12;

  000d4	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  000d9	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  000de	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000e3	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000e7	66 89 41 08	 mov	 WORD PTR [rcx+8], ax
  000eb	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000f0	48 c1 e8 0c	 shr	 rax, 12
  000f4	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 516  :     *(pGIBLK->pIndex + 3) = (                (U16) dw        ) & 0x0FFF; dw >>= 12;

  000f9	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  000fe	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  00103	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00108	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0010c	66 89 41 06	 mov	 WORD PTR [rcx+6], ax
  00110	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00115	48 c1 e8 0c	 shr	 rax, 12
  00119	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 517  :     *(pGIBLK->pIndex + 2) = (                (U16) dw        ) & 0x0FFF; dw >>= 12;

  0011e	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00123	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  00128	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0012d	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00131	66 89 41 04	 mov	 WORD PTR [rcx+4], ax
  00135	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0013a	48 c1 e8 0c	 shr	 rax, 12
  0013e	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 518  :     *(pGIBLK->pIndex + 1) = (                (U16) dw        ) & 0x0FFF; dw >>= 12;

  00143	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00148	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0014d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00152	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00156	66 89 41 02	 mov	 WORD PTR [rcx+2], ax
  0015a	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0015f	48 c1 e8 0c	 shr	 rax, 12
  00163	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 519  :     *(pGIBLK->pIndex + 0) = (                (U16) dw        );

  00168	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0016d	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00171	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  00176	66 89 08	 mov	 WORD PTR [rax], cx

; 520  : 
; 521  :     return  12;

  00179	b0 0c		 mov	 al, 12
$LN1@s390_Get8I:

; 522  : }

  0017b	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0017f	c3		 ret	 0
s390_Get8Index012 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
b$ = 32
hw$ = 36
dw$ = 40
pGIBLK$ = 64
s390_Get8Index011 PROC

; 469  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 470  :     register U8  b;
; 471  :     register U16 hw;
; 472  :     register U64 dw;
; 473  : 
; 474  :     if (pGIBLK->pCMPSCBLK->nLen2 < 11) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 0b	 cmp	 QWORD PTR [rax+8], 11
  00016	73 07		 jae	 SHORT $LN2@s390_Get8I
  00018	32 c0		 xor	 al, al
  0001a	e9 91 01 00 00	 jmp	 $LN1@s390_Get8I
$LN2@s390_Get8I:

; 475  : 
; 476  :     b  = fetch_op_b ( pGIBLK->pCMPSCBLK->pOp2 + 10, pGIBLK->pMEMBLK );

  0001f	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0002b	48 83 c0 0a	 add	 rax, 10
  0002f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00034	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 s390_cmpsc_vfetchb
  0003f	88 44 24 20	 mov	 BYTE PTR b$[rsp], al

; 477  :     hw = fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2 +  8, pGIBLK->pMEMBLK );

  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00048	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004b	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0004f	48 83 c0 08	 add	 rax, 8
  00053	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00058	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0005c	8b c8		 mov	 ecx, eax
  0005e	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00063	66 89 44 24 24	 mov	 WORD PTR hw$[rsp], ax

; 478  :     dw = fetch_op_dw( pGIBLK->pCMPSCBLK->pOp2 +  0, pGIBLK->pMEMBLK );

  00068	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0006d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00070	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00075	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00079	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  0007c	e8 00 00 00 00	 call	 s390_cmpsc_vfetch8
  00081	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 479  : 
; 480  :     *(pGIBLK->pIndex + 7) = ( ((U16) b) | (       hw  << 8) ) & 0x07FF; hw >>=  3;

  00086	0f b6 44 24 20	 movzx	 eax, BYTE PTR b$[rsp]
  0008b	0f b7 4c 24 24	 movzx	 ecx, WORD PTR hw$[rsp]
  00090	c1 e1 08	 shl	 ecx, 8
  00093	0b c1		 or	 eax, ecx
  00095	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  0009a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0009f	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000a3	66 89 41 0e	 mov	 WORD PTR [rcx+14], ax
  000a7	0f b7 44 24 24	 movzx	 eax, WORD PTR hw$[rsp]
  000ac	66 c1 e8 03	 shr	 ax, 3
  000b0	66 89 44 24 24	 mov	 WORD PTR hw$[rsp], ax

; 481  :     *(pGIBLK->pIndex + 6) = (    hw                         ) & 0x07FF; hw >>= 11;

  000b5	0f b7 44 24 24	 movzx	 eax, WORD PTR hw$[rsp]
  000ba	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  000bf	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000c4	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000c8	66 89 41 0c	 mov	 WORD PTR [rcx+12], ax
  000cc	0f b7 44 24 24	 movzx	 eax, WORD PTR hw$[rsp]
  000d1	66 c1 e8 0b	 shr	 ax, 11
  000d5	66 89 44 24 24	 mov	 WORD PTR hw$[rsp], ax

; 482  :     *(pGIBLK->pIndex + 5) = (    hw     | (((U16) dw) << 2) ) & 0x07FF; dw >>=  9;

  000da	0f b7 44 24 24	 movzx	 eax, WORD PTR hw$[rsp]
  000df	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  000e4	c1 e1 02	 shl	 ecx, 2
  000e7	0b c1		 or	 eax, ecx
  000e9	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  000ee	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000f3	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000f7	66 89 41 0a	 mov	 WORD PTR [rcx+10], ax
  000fb	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00100	48 c1 e8 09	 shr	 rax, 9
  00104	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 483  :     *(pGIBLK->pIndex + 4) = (               (U16) dw        ) & 0x07FF; dw >>= 11;

  00109	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  0010e	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  00113	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00118	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0011c	66 89 41 08	 mov	 WORD PTR [rcx+8], ax
  00120	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00125	48 c1 e8 0b	 shr	 rax, 11
  00129	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 484  :     *(pGIBLK->pIndex + 3) = (               (U16) dw        ) & 0x07FF; dw >>= 11;

  0012e	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00133	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  00138	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0013d	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00141	66 89 41 06	 mov	 WORD PTR [rcx+6], ax
  00145	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0014a	48 c1 e8 0b	 shr	 rax, 11
  0014e	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 485  :     *(pGIBLK->pIndex + 2) = (               (U16) dw        ) & 0x07FF; dw >>= 11;

  00153	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00158	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  0015d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00162	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00166	66 89 41 04	 mov	 WORD PTR [rcx+4], ax
  0016a	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0016f	48 c1 e8 0b	 shr	 rax, 11
  00173	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 486  :     *(pGIBLK->pIndex + 1) = (               (U16) dw        ) & 0x07FF; dw >>= 11;

  00178	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  0017d	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  00182	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00187	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0018b	66 89 41 02	 mov	 WORD PTR [rcx+2], ax
  0018f	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00194	48 c1 e8 0b	 shr	 rax, 11
  00198	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 487  :     *(pGIBLK->pIndex + 0) = (               (U16) dw        );

  0019d	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  001a2	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  001a6	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  001ab	66 89 08	 mov	 WORD PTR [rax], cx

; 488  : 
; 489  :     return  11;

  001ae	b0 0b		 mov	 al, 11
$LN1@s390_Get8I:

; 490  : }

  001b0	48 83 c4 38	 add	 rsp, 56			; 00000038H
  001b4	c3		 ret	 0
s390_Get8Index011 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
hw$ = 32
dw$ = 40
pGIBLK$ = 64
s390_Get8Index010 PROC

; 434  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 435  :     register U16 hw;
; 436  :     register U64 dw;
; 437  : 
; 438  :     if (pGIBLK->pCMPSCBLK->nLen2 < 10) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 0a	 cmp	 QWORD PTR [rax+8], 10
  00016	73 07		 jae	 SHORT $LN2@s390_Get8I
  00018	32 c0		 xor	 al, al
  0001a	e9 63 01 00 00	 jmp	 $LN1@s390_Get8I
$LN2@s390_Get8I:

; 439  : 
; 440  :     hw = fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2 + 8, pGIBLK->pMEMBLK );

  0001f	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0002b	48 83 c0 08	 add	 rax, 8
  0002f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00034	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  0003f	66 89 44 24 20	 mov	 WORD PTR hw$[rsp], ax

; 441  :     dw = fetch_op_dw( pGIBLK->pCMPSCBLK->pOp2 + 0, pGIBLK->pMEMBLK );

  00044	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00049	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00055	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00058	e8 00 00 00 00	 call	 s390_cmpsc_vfetch8
  0005d	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 442  : 
; 443  :     *(pGIBLK->pIndex + 7) = ( hw                     ) & 0x03FF; hw >>= 10;

  00062	0f b7 44 24 20	 movzx	 eax, WORD PTR hw$[rsp]
  00067	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0006c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00071	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00075	66 89 41 0e	 mov	 WORD PTR [rcx+14], ax
  00079	0f b7 44 24 20	 movzx	 eax, WORD PTR hw$[rsp]
  0007e	66 c1 e8 0a	 shr	 ax, 10
  00082	66 89 44 24 20	 mov	 WORD PTR hw$[rsp], ax

; 444  :     *(pGIBLK->pIndex + 6) = ( hw | (((U16) dw) << 6) ) & 0x03FF; dw >>=  4;

  00087	0f b7 44 24 20	 movzx	 eax, WORD PTR hw$[rsp]
  0008c	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  00091	c1 e1 06	 shl	 ecx, 6
  00094	0b c1		 or	 eax, ecx
  00096	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0009b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000a0	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000a4	66 89 41 0c	 mov	 WORD PTR [rcx+12], ax
  000a8	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000ad	48 c1 e8 04	 shr	 rax, 4
  000b1	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 445  :     *(pGIBLK->pIndex + 5) = (        (U16) dw        ) & 0x03FF; dw >>= 10;

  000b6	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  000bb	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  000c0	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000c5	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000c9	66 89 41 0a	 mov	 WORD PTR [rcx+10], ax
  000cd	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000d2	48 c1 e8 0a	 shr	 rax, 10
  000d6	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 446  :     *(pGIBLK->pIndex + 4) = (        (U16) dw        ) & 0x03FF; dw >>= 10;

  000db	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  000e0	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  000e5	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000ea	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000ee	66 89 41 08	 mov	 WORD PTR [rcx+8], ax
  000f2	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000f7	48 c1 e8 0a	 shr	 rax, 10
  000fb	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 447  :     *(pGIBLK->pIndex + 3) = (        (U16) dw        ) & 0x03FF; dw >>= 10;

  00100	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00105	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0010a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0010f	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00113	66 89 41 06	 mov	 WORD PTR [rcx+6], ax
  00117	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0011c	48 c1 e8 0a	 shr	 rax, 10
  00120	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 448  :     *(pGIBLK->pIndex + 2) = (        (U16) dw        ) & 0x03FF; dw >>= 10;

  00125	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  0012a	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0012f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00134	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00138	66 89 41 04	 mov	 WORD PTR [rcx+4], ax
  0013c	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00141	48 c1 e8 0a	 shr	 rax, 10
  00145	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 449  :     *(pGIBLK->pIndex + 1) = (        (U16) dw        ) & 0x03FF; dw >>= 10;

  0014a	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  0014f	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  00154	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00159	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0015d	66 89 41 02	 mov	 WORD PTR [rcx+2], ax
  00161	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00166	48 c1 e8 0a	 shr	 rax, 10
  0016a	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 450  :     *(pGIBLK->pIndex + 0) = (        (U16) dw        );

  0016f	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00174	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00178	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  0017d	66 89 08	 mov	 WORD PTR [rax], cx

; 451  : 
; 452  :     return  10;

  00180	b0 0a		 mov	 al, 10
$LN1@s390_Get8I:

; 453  : }

  00182	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00186	c3		 ret	 0
s390_Get8Index010 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
b$ = 32
dw$ = 40
pGIBLK$ = 64
s390_Get8Index009 PROC

; 403  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 404  :     register U8  b;
; 405  :     register U64 dw;
; 406  : 
; 407  :     if (pGIBLK->pCMPSCBLK->nLen2 <  9) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 09	 cmp	 QWORD PTR [rax+8], 9
  00016	73 07		 jae	 SHORT $LN2@s390_Get8I
  00018	32 c0		 xor	 al, al
  0001a	e9 61 01 00 00	 jmp	 $LN1@s390_Get8I
$LN2@s390_Get8I:

; 408  : 
; 409  :     b  = fetch_op_b ( pGIBLK->pCMPSCBLK->pOp2 + 8, pGIBLK->pMEMBLK );

  0001f	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0002b	48 83 c0 08	 add	 rax, 8
  0002f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00034	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 s390_cmpsc_vfetchb
  0003f	88 44 24 20	 mov	 BYTE PTR b$[rsp], al

; 410  :     dw = fetch_op_dw( pGIBLK->pCMPSCBLK->pOp2 + 0, pGIBLK->pMEMBLK );

  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00048	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00050	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00054	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00057	e8 00 00 00 00	 call	 s390_cmpsc_vfetch8
  0005c	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 411  : 
; 412  :     *(pGIBLK->pIndex + 7) = ( ((U16) b) | (((U16) dw) << 8) ) & 0x01FF; dw >>= 1;

  00061	0f b6 44 24 20	 movzx	 eax, BYTE PTR b$[rsp]
  00066	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  0006b	c1 e1 08	 shl	 ecx, 8
  0006e	0b c1		 or	 eax, ecx
  00070	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  00075	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0007a	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0007e	66 89 41 0e	 mov	 WORD PTR [rcx+14], ax
  00082	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00087	48 d1 e8	 shr	 rax, 1
  0008a	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 413  :     *(pGIBLK->pIndex + 6) = (               (U16) dw        ) & 0x01FF; dw >>= 9;

  0008f	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00094	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  00099	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0009e	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000a2	66 89 41 0c	 mov	 WORD PTR [rcx+12], ax
  000a6	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000ab	48 c1 e8 09	 shr	 rax, 9
  000af	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 414  :     *(pGIBLK->pIndex + 5) = (               (U16) dw        ) & 0x01FF; dw >>= 9;

  000b4	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  000b9	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  000be	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000c3	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000c7	66 89 41 0a	 mov	 WORD PTR [rcx+10], ax
  000cb	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000d0	48 c1 e8 09	 shr	 rax, 9
  000d4	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 415  :     *(pGIBLK->pIndex + 4) = (               (U16) dw        ) & 0x01FF; dw >>= 9;

  000d9	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  000de	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  000e3	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000e8	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000ec	66 89 41 08	 mov	 WORD PTR [rcx+8], ax
  000f0	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000f5	48 c1 e8 09	 shr	 rax, 9
  000f9	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 416  :     *(pGIBLK->pIndex + 3) = (               (U16) dw        ) & 0x01FF; dw >>= 9;

  000fe	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00103	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  00108	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0010d	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00111	66 89 41 06	 mov	 WORD PTR [rcx+6], ax
  00115	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0011a	48 c1 e8 09	 shr	 rax, 9
  0011e	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 417  :     *(pGIBLK->pIndex + 2) = (               (U16) dw        ) & 0x01FF; dw >>= 9;

  00123	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00128	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  0012d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00132	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00136	66 89 41 04	 mov	 WORD PTR [rcx+4], ax
  0013a	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0013f	48 c1 e8 09	 shr	 rax, 9
  00143	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 418  :     *(pGIBLK->pIndex + 1) = (               (U16) dw        ) & 0x01FF; dw >>= 9;

  00148	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  0014d	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  00152	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00157	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0015b	66 89 41 02	 mov	 WORD PTR [rcx+2], ax
  0015f	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00164	48 c1 e8 09	 shr	 rax, 9
  00168	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 419  :     *(pGIBLK->pIndex + 0) = (               (U16) dw        );

  0016d	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00172	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00176	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  0017b	66 89 08	 mov	 WORD PTR [rax], cx

; 420  : 
; 421  :     return  9;

  0017e	b0 09		 mov	 al, 9
$LN1@s390_Get8I:

; 422  : }

  00180	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00184	c3		 ret	 0
s390_Get8Index009 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
s390_GetIndex713 PROC

; 383  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 384  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 75		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 385  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x01FF) << 4)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  0003d	c1 e0 04	 shl	 eax, 4
  00040	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00044	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00049	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004c	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00050	48 83 c1 02	 add	 rcx, 2
  00054	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00059	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005d	e8 00 00 00 00	 call	 s390_cmpsc_vfetchb
  00062	0f b6 c0	 movzx	 eax, al
  00065	c1 f8 04	 sar	 eax, 4
  00068	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006c	0b c8		 or	 ecx, eax
  0006e	8b c1		 mov	 eax, ecx
  00070	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00075	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00079	66 89 01	 mov	 WORD PTR [rcx], ax

; 386  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 4);
; 387  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex413 );

  0007c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00081	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00085	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex413
  0008c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 388  :     return 2;

  0008f	b0 02		 mov	 al, 2
$LN1@s390_GetIn:

; 389  : }

  00091	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00095	c3		 ret	 0
s390_GetIndex713 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
s390_GetIndex613 PROC

; 375  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 376  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 75		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 377  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x03FF) << 3)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0003d	c1 e0 03	 shl	 eax, 3
  00040	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00044	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00049	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004c	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00050	48 83 c1 02	 add	 rcx, 2
  00054	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00059	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005d	e8 00 00 00 00	 call	 s390_cmpsc_vfetchb
  00062	0f b6 c0	 movzx	 eax, al
  00065	c1 f8 05	 sar	 eax, 5
  00068	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006c	0b c8		 or	 ecx, eax
  0006e	8b c1		 mov	 eax, ecx
  00070	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00075	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00079	66 89 01	 mov	 WORD PTR [rcx], ax

; 378  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 5);
; 379  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex313 );

  0007c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00081	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00085	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex313
  0008c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 380  :     return 2;

  0008f	b0 02		 mov	 al, 2
$LN1@s390_GetIn:

; 381  : }

  00091	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00095	c3		 ret	 0
s390_GetIndex613 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
s390_GetIndex513 PROC

; 367  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 368  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 75		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 369  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x07FF) << 2)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  0003d	c1 e0 02	 shl	 eax, 2
  00040	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00044	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00049	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004c	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00050	48 83 c1 02	 add	 rcx, 2
  00054	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00059	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005d	e8 00 00 00 00	 call	 s390_cmpsc_vfetchb
  00062	0f b6 c0	 movzx	 eax, al
  00065	c1 f8 06	 sar	 eax, 6
  00068	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006c	0b c8		 or	 ecx, eax
  0006e	8b c1		 mov	 eax, ecx
  00070	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00075	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00079	66 89 01	 mov	 WORD PTR [rcx], ax

; 370  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 6);
; 371  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex213 );

  0007c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00081	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00085	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex213
  0008c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 372  :     return 2;

  0008f	b0 02		 mov	 al, 2
$LN1@s390_GetIn:

; 373  : }

  00091	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00095	c3		 ret	 0
s390_GetIndex513 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
s390_GetIndex413 PROC

; 359  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 360  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 74		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 361  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x0FFF) << 1)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0003d	d1 e0		 shl	 eax, 1
  0003f	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00043	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00048	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004b	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  0004f	48 83 c1 02	 add	 rcx, 2
  00053	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00058	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005c	e8 00 00 00 00	 call	 s390_cmpsc_vfetchb
  00061	0f b6 c0	 movzx	 eax, al
  00064	c1 f8 07	 sar	 eax, 7
  00067	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006b	0b c8		 or	 ecx, eax
  0006d	8b c1		 mov	 eax, ecx
  0006f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00074	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00078	66 89 01	 mov	 WORD PTR [rcx], ax

; 362  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 7);
; 363  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex113 );

  0007b	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00080	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00084	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex113
  0008b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 364  :     return 2;

  0008e	b0 02		 mov	 al, 2
$LN1@s390_GetIn:

; 365  : }

  00090	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00094	c3		 ret	 0
s390_GetIndex413 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex313 PROC

; 352  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 353  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 42		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 354  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x1FFF);

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00042	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00046	66 89 01	 mov	 WORD PTR [rcx], ax

; 355  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex013 );

  00049	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004e	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00052	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex013
  00059	48 89 08	 mov	 QWORD PTR [rax], rcx

; 356  :     return 2;

  0005c	b0 02		 mov	 al, 2
$LN1@s390_GetIn:

; 357  : }

  0005e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00062	c3		 ret	 0
s390_GetIndex313 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex213 PROC

; 345  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 346  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 44		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 347  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x3FFF) >> 1;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 3f 00 00	 and	 eax, 16383		; 00003fffH
  0003d	d1 f8		 sar	 eax, 1
  0003f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00044	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00048	66 89 01	 mov	 WORD PTR [rcx], ax

; 348  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex713 );

  0004b	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00050	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00054	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex713
  0005b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 349  :     return 1;

  0005e	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 350  : }

  00060	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00064	c3		 ret	 0
s390_GetIndex213 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex113 PROC

; 338  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 339  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 340  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x7FFF) >> 2;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 7f 00 00	 and	 eax, 32767		; 00007fffH
  0003d	c1 f8 02	 sar	 eax, 2
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 341  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex613 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex613
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 342  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 343  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s390_GetIndex113 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex013 PROC

; 331  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 332  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 40		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 333  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK )         ) >> 3;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	c1 f8 03	 sar	 eax, 3
  0003b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00040	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00044	66 89 01	 mov	 WORD PTR [rcx], ax

; 334  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex513 );

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004c	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00050	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex513
  00057	48 89 08	 mov	 QWORD PTR [rax], rcx

; 335  :     return 1;

  0005a	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 336  : }

  0005c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00060	c3		 ret	 0
s390_GetIndex013 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
s390_GetIndex712 PROC

; 317  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 318  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 75		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 319  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x01FF) << 3)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  0003d	c1 e0 03	 shl	 eax, 3
  00040	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00044	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00049	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004c	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00050	48 83 c1 02	 add	 rcx, 2
  00054	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00059	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005d	e8 00 00 00 00	 call	 s390_cmpsc_vfetchb
  00062	0f b6 c0	 movzx	 eax, al
  00065	c1 f8 05	 sar	 eax, 5
  00068	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006c	0b c8		 or	 ecx, eax
  0006e	8b c1		 mov	 eax, ecx
  00070	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00075	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00079	66 89 01	 mov	 WORD PTR [rcx], ax

; 320  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 5);
; 321  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex312 );

  0007c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00081	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00085	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex312
  0008c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 322  :     return 2;

  0008f	b0 02		 mov	 al, 2
$LN1@s390_GetIn:

; 323  : }

  00091	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00095	c3		 ret	 0
s390_GetIndex712 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
s390_GetIndex612 PROC

; 309  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 310  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 75		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 311  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x03FF) << 2)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0003d	c1 e0 02	 shl	 eax, 2
  00040	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00044	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00049	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004c	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00050	48 83 c1 02	 add	 rcx, 2
  00054	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00059	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005d	e8 00 00 00 00	 call	 s390_cmpsc_vfetchb
  00062	0f b6 c0	 movzx	 eax, al
  00065	c1 f8 06	 sar	 eax, 6
  00068	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006c	0b c8		 or	 ecx, eax
  0006e	8b c1		 mov	 eax, ecx
  00070	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00075	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00079	66 89 01	 mov	 WORD PTR [rcx], ax

; 312  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 6);
; 313  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex212 );

  0007c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00081	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00085	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex212
  0008c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 314  :     return 2;

  0008f	b0 02		 mov	 al, 2
$LN1@s390_GetIn:

; 315  : }

  00091	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00095	c3		 ret	 0
s390_GetIndex612 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
s390_GetIndex512 PROC

; 301  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 302  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 74		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 303  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x07FF) << 1)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  0003d	d1 e0		 shl	 eax, 1
  0003f	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00043	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00048	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004b	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  0004f	48 83 c1 02	 add	 rcx, 2
  00053	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00058	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005c	e8 00 00 00 00	 call	 s390_cmpsc_vfetchb
  00061	0f b6 c0	 movzx	 eax, al
  00064	c1 f8 07	 sar	 eax, 7
  00067	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006b	0b c8		 or	 ecx, eax
  0006d	8b c1		 mov	 eax, ecx
  0006f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00074	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00078	66 89 01	 mov	 WORD PTR [rcx], ax

; 304  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 7);
; 305  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex112 );

  0007b	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00080	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00084	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex112
  0008b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 306  :     return 2;

  0008e	b0 02		 mov	 al, 2
$LN1@s390_GetIn:

; 307  : }

  00090	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00094	c3		 ret	 0
s390_GetIndex512 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex412 PROC

; 294  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 295  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 42		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 296  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x0FFF);

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00042	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00046	66 89 01	 mov	 WORD PTR [rcx], ax

; 297  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex012 );

  00049	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004e	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00052	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex012
  00059	48 89 08	 mov	 QWORD PTR [rax], rcx

; 298  :     return 2;

  0005c	b0 02		 mov	 al, 2
$LN1@s390_GetIn:

; 299  : }

  0005e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00062	c3		 ret	 0
s390_GetIndex412 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex312 PROC

; 287  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 288  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 44		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 289  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x1FFF) >> 1;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  0003d	d1 f8		 sar	 eax, 1
  0003f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00044	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00048	66 89 01	 mov	 WORD PTR [rcx], ax

; 290  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex712 );

  0004b	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00050	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00054	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex712
  0005b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 291  :     return 1;

  0005e	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 292  : }

  00060	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00064	c3		 ret	 0
s390_GetIndex312 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex212 PROC

; 280  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 281  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 282  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x3FFF) >> 2;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 3f 00 00	 and	 eax, 16383		; 00003fffH
  0003d	c1 f8 02	 sar	 eax, 2
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 283  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex612 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex612
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 284  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 285  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s390_GetIndex212 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex112 PROC

; 273  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 274  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 275  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x7FFF) >> 3;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 7f 00 00	 and	 eax, 32767		; 00007fffH
  0003d	c1 f8 03	 sar	 eax, 3
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 276  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex512 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex512
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 277  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 278  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s390_GetIndex112 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex012 PROC

; 266  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 267  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 40		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 268  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK )         ) >> 4;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	c1 f8 04	 sar	 eax, 4
  0003b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00040	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00044	66 89 01	 mov	 WORD PTR [rcx], ax

; 269  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex412 );

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004c	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00050	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex412
  00057	48 89 08	 mov	 QWORD PTR [rax], rcx

; 270  :     return 1;

  0005a	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 271  : }

  0005c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00060	c3		 ret	 0
s390_GetIndex012 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
s390_GetIndex711 PROC

; 252  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 253  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 75		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 254  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x01FF) << 2)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  0003d	c1 e0 02	 shl	 eax, 2
  00040	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00044	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00049	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004c	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00050	48 83 c1 02	 add	 rcx, 2
  00054	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00059	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005d	e8 00 00 00 00	 call	 s390_cmpsc_vfetchb
  00062	0f b6 c0	 movzx	 eax, al
  00065	c1 f8 06	 sar	 eax, 6
  00068	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006c	0b c8		 or	 ecx, eax
  0006e	8b c1		 mov	 eax, ecx
  00070	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00075	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00079	66 89 01	 mov	 WORD PTR [rcx], ax

; 255  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 6);
; 256  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex211 );

  0007c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00081	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00085	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex211
  0008c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 257  :     return 2;

  0008f	b0 02		 mov	 al, 2
$LN1@s390_GetIn:

; 258  : }

  00091	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00095	c3		 ret	 0
s390_GetIndex711 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
s390_GetIndex611 PROC

; 244  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 245  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 74		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 246  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x03FF) << 1)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0003d	d1 e0		 shl	 eax, 1
  0003f	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00043	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00048	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004b	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  0004f	48 83 c1 02	 add	 rcx, 2
  00053	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00058	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005c	e8 00 00 00 00	 call	 s390_cmpsc_vfetchb
  00061	0f b6 c0	 movzx	 eax, al
  00064	c1 f8 07	 sar	 eax, 7
  00067	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006b	0b c8		 or	 ecx, eax
  0006d	8b c1		 mov	 eax, ecx
  0006f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00074	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00078	66 89 01	 mov	 WORD PTR [rcx], ax

; 247  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 7);
; 248  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex111 );

  0007b	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00080	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00084	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex111
  0008b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 249  :     return 2;

  0008e	b0 02		 mov	 al, 2
$LN1@s390_GetIn:

; 250  : }

  00090	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00094	c3		 ret	 0
s390_GetIndex611 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex511 PROC

; 237  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 238  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 42		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 239  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x07FF);

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00042	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00046	66 89 01	 mov	 WORD PTR [rcx], ax

; 240  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex011 );

  00049	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004e	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00052	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex011
  00059	48 89 08	 mov	 QWORD PTR [rax], rcx

; 241  :     return 2;

  0005c	b0 02		 mov	 al, 2
$LN1@s390_GetIn:

; 242  : }

  0005e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00062	c3		 ret	 0
s390_GetIndex511 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex411 PROC

; 230  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 231  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 44		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 232  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x0FFF) >> 1;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0003d	d1 f8		 sar	 eax, 1
  0003f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00044	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00048	66 89 01	 mov	 WORD PTR [rcx], ax

; 233  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex711 );

  0004b	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00050	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00054	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex711
  0005b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 234  :     return 1;

  0005e	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 235  : }

  00060	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00064	c3		 ret	 0
s390_GetIndex411 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex311 PROC

; 223  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 224  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 225  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x1FFF) >> 2;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  0003d	c1 f8 02	 sar	 eax, 2
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 226  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex611 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex611
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 227  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 228  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s390_GetIndex311 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex211 PROC

; 216  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 217  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 218  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x3FFF) >> 3;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 3f 00 00	 and	 eax, 16383		; 00003fffH
  0003d	c1 f8 03	 sar	 eax, 3
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 219  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex511 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex511
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 220  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 221  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s390_GetIndex211 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex111 PROC

; 209  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 210  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 211  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x7FFF) >> 4;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 7f 00 00	 and	 eax, 32767		; 00007fffH
  0003d	c1 f8 04	 sar	 eax, 4
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 212  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex411 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex411
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 213  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 214  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s390_GetIndex111 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex011 PROC

; 202  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 203  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 40		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 204  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK )         ) >> 5;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	c1 f8 05	 sar	 eax, 5
  0003b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00040	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00044	66 89 01	 mov	 WORD PTR [rcx], ax

; 205  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex311 );

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004c	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00050	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex311
  00057	48 89 08	 mov	 QWORD PTR [rax], rcx

; 206  :     return 1;

  0005a	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 207  : }

  0005c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00060	c3		 ret	 0
s390_GetIndex011 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
s390_GetIndex710 PROC

; 188  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 189  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 74		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 190  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x01FF) << 1)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  0003d	d1 e0		 shl	 eax, 1
  0003f	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00043	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00048	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004b	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  0004f	48 83 c1 02	 add	 rcx, 2
  00053	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00058	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005c	e8 00 00 00 00	 call	 s390_cmpsc_vfetchb
  00061	0f b6 c0	 movzx	 eax, al
  00064	c1 f8 07	 sar	 eax, 7
  00067	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006b	0b c8		 or	 ecx, eax
  0006d	8b c1		 mov	 eax, ecx
  0006f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00074	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00078	66 89 01	 mov	 WORD PTR [rcx], ax

; 191  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 7);
; 192  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex110 );

  0007b	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00080	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00084	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex110
  0008b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 193  :     return 2;

  0008e	b0 02		 mov	 al, 2
$LN1@s390_GetIn:

; 194  : }

  00090	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00094	c3		 ret	 0
s390_GetIndex710 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex610 PROC

; 181  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 182  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 42		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 183  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x03FF);

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00042	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00046	66 89 01	 mov	 WORD PTR [rcx], ax

; 184  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex010 );

  00049	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004e	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00052	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex010
  00059	48 89 08	 mov	 QWORD PTR [rax], rcx

; 185  :     return 2;

  0005c	b0 02		 mov	 al, 2
$LN1@s390_GetIn:

; 186  : }

  0005e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00062	c3		 ret	 0
s390_GetIndex610 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex510 PROC

; 174  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 175  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 44		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 176  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x07FF) >> 1;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  0003d	d1 f8		 sar	 eax, 1
  0003f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00044	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00048	66 89 01	 mov	 WORD PTR [rcx], ax

; 177  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex710 );

  0004b	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00050	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00054	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex710
  0005b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 178  :     return 1;

  0005e	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 179  : }

  00060	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00064	c3		 ret	 0
s390_GetIndex510 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex410 PROC

; 167  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 168  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 169  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x0FFF) >> 2;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0003d	c1 f8 02	 sar	 eax, 2
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 170  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex610 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex610
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 171  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 172  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s390_GetIndex410 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex310 PROC

; 160  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 161  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 162  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x1FFF) >> 3;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  0003d	c1 f8 03	 sar	 eax, 3
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 163  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex510 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex510
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 164  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 165  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s390_GetIndex310 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex210 PROC

; 153  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 154  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 155  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x3FFF) >> 4;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 3f 00 00	 and	 eax, 16383		; 00003fffH
  0003d	c1 f8 04	 sar	 eax, 4
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 156  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex410 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex410
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 157  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 158  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s390_GetIndex210 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex110 PROC

; 146  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 147  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 148  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x7FFF) >> 5;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 7f 00 00	 and	 eax, 32767		; 00007fffH
  0003d	c1 f8 05	 sar	 eax, 5
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 149  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex310 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex310
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 150  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 151  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s390_GetIndex110 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex010 PROC

; 139  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 140  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 40		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 141  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK )         ) >> 6;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	c1 f8 06	 sar	 eax, 6
  0003b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00040	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00044	66 89 01	 mov	 WORD PTR [rcx], ax

; 142  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex210 );

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004c	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00050	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex210
  00057	48 89 08	 mov	 QWORD PTR [rax], rcx

; 143  :     return 1;

  0005a	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 144  : }

  0005c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00060	c3		 ret	 0
s390_GetIndex010 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex709 PROC

; 126  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 127  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 42		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 128  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x01FF);

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00042	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00046	66 89 01	 mov	 WORD PTR [rcx], ax

; 129  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex009 );

  00049	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004e	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00052	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex009
  00059	48 89 08	 mov	 QWORD PTR [rax], rcx

; 130  :     return 2;

  0005c	b0 02		 mov	 al, 2
$LN1@s390_GetIn:

; 131  : }

  0005e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00062	c3		 ret	 0
s390_GetIndex709 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex609 PROC

; 119  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 120  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 44		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 121  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x03FF) >> 1;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0003d	d1 f8		 sar	 eax, 1
  0003f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00044	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00048	66 89 01	 mov	 WORD PTR [rcx], ax

; 122  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex709 );

  0004b	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00050	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00054	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex709
  0005b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 123  :     return 1;

  0005e	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 124  : }

  00060	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00064	c3		 ret	 0
s390_GetIndex609 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex509 PROC

; 112  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 113  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 114  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x07FF) >> 2;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  0003d	c1 f8 02	 sar	 eax, 2
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 115  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex609 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex609
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 116  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 117  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s390_GetIndex509 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex409 PROC

; 105  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 106  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 107  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x0FFF) >> 3;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0003d	c1 f8 03	 sar	 eax, 3
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 108  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex509 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex509
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 109  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 110  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s390_GetIndex409 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex309 PROC

; 98   : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 99   :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 100  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x1FFF) >> 4;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  0003d	c1 f8 04	 sar	 eax, 4
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 101  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex409 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex409
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 102  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 103  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s390_GetIndex309 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex209 PROC

; 91   : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 92   :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 93   :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x3FFF) >> 5;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 3f 00 00	 and	 eax, 16383		; 00003fffH
  0003d	c1 f8 05	 sar	 eax, 5
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 94   :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex309 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex309
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 95   :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 96   : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s390_GetIndex209 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex109 PROC

; 84   : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 85   :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 86   :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x7FFF) >> 6;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 7f 00 00	 and	 eax, 32767		; 00007fffH
  0003d	c1 f8 06	 sar	 eax, 6
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 87   :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex209 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex209
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 88   :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 89   : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s390_GetIndex109 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s390_GetIndex009 PROC

; 77   : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 78   :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s390_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 40		 jmp	 SHORT $LN1@s390_GetIn
$LN2@s390_GetIn:

; 79   :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK )         ) >> 7;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s390_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	c1 f8 07	 sar	 eax, 7
  0003b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00040	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00044	66 89 01	 mov	 WORD PTR [rcx], ax

; 80   :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex109 );

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004c	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00050	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s390_GetIndex109
  00057	48 89 08	 mov	 QWORD PTR [rax], rcx

; 81   :     return 1;

  0005a	b0 01		 mov	 al, 1
$LN1@s390_GetIn:

; 82   : }

  0005c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00060	c3		 ret	 0
s390_GetIndex009 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
b$ = 32
fw$ = 36
dw$ = 40
pGIBLK$ = 64
s370_Get8Index013 PROC

; 538  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 539  :     register U8  b;
; 540  :     register U32 fw;
; 541  :     register U64 dw;
; 542  : 
; 543  :     if (pGIBLK->pCMPSCBLK->nLen2 < 13) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 0d	 cmp	 QWORD PTR [rax+8], 13
  00016	73 07		 jae	 SHORT $LN2@s370_Get8I
  00018	32 c0		 xor	 al, al
  0001a	e9 86 01 00 00	 jmp	 $LN1@s370_Get8I
$LN2@s370_Get8I:

; 544  : 
; 545  :     b  = fetch_op_b ( pGIBLK->pCMPSCBLK->pOp2 + 12, pGIBLK->pMEMBLK );

  0001f	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0002b	48 83 c0 0c	 add	 rax, 12
  0002f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00034	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 s370_cmpsc_vfetchb
  0003f	88 44 24 20	 mov	 BYTE PTR b$[rsp], al

; 546  :     fw = fetch_op_fw( pGIBLK->pCMPSCBLK->pOp2 +  8, pGIBLK->pMEMBLK );

  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00048	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004b	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0004f	48 83 c0 08	 add	 rax, 8
  00053	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00058	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0005c	8b c8		 mov	 ecx, eax
  0005e	e8 00 00 00 00	 call	 s370_cmpsc_vfetch4
  00063	89 44 24 24	 mov	 DWORD PTR fw$[rsp], eax

; 547  :     dw = fetch_op_dw( pGIBLK->pCMPSCBLK->pOp2 +  0, pGIBLK->pMEMBLK );

  00067	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0006c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00074	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00078	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  0007b	e8 00 00 00 00	 call	 s370_cmpsc_vfetch8
  00080	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 548  : 
; 549  :     *(pGIBLK->pIndex + 7) = ( ((U16) b)  | (((U16) fw) << 8) ) & 0x1FFF; fw >>=  5;

  00085	0f b6 44 24 20	 movzx	 eax, BYTE PTR b$[rsp]
  0008a	0f b7 4c 24 24	 movzx	 ecx, WORD PTR fw$[rsp]
  0008f	c1 e1 08	 shl	 ecx, 8
  00092	0b c1		 or	 eax, ecx
  00094	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  00099	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0009e	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000a2	66 89 41 0e	 mov	 WORD PTR [rcx+14], ax
  000a6	8b 44 24 24	 mov	 eax, DWORD PTR fw$[rsp]
  000aa	c1 e8 05	 shr	 eax, 5
  000ad	89 44 24 24	 mov	 DWORD PTR fw$[rsp], eax

; 550  :     *(pGIBLK->pIndex + 6) = (  (U16) fw                      ) & 0x1FFF; fw >>= 13;

  000b1	0f b7 44 24 24	 movzx	 eax, WORD PTR fw$[rsp]
  000b6	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  000bb	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000c0	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000c4	66 89 41 0c	 mov	 WORD PTR [rcx+12], ax
  000c8	8b 44 24 24	 mov	 eax, DWORD PTR fw$[rsp]
  000cc	c1 e8 0d	 shr	 eax, 13
  000cf	89 44 24 24	 mov	 DWORD PTR fw$[rsp], eax

; 551  :     *(pGIBLK->pIndex + 5) = (  (U16) fw                      ) & 0x1FFF; fw >>= 13;

  000d3	0f b7 44 24 24	 movzx	 eax, WORD PTR fw$[rsp]
  000d8	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  000dd	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000e2	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000e6	66 89 41 0a	 mov	 WORD PTR [rcx+10], ax
  000ea	8b 44 24 24	 mov	 eax, DWORD PTR fw$[rsp]
  000ee	c1 e8 0d	 shr	 eax, 13
  000f1	89 44 24 24	 mov	 DWORD PTR fw$[rsp], eax

; 552  :     *(pGIBLK->pIndex + 4) = ( ((U16) fw) | (((U16) dw) << 1) ) & 0x1FFF; dw >>= 12;

  000f5	0f b7 44 24 24	 movzx	 eax, WORD PTR fw$[rsp]
  000fa	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  000ff	d1 e1		 shl	 ecx, 1
  00101	0b c1		 or	 eax, ecx
  00103	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  00108	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0010d	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00111	66 89 41 08	 mov	 WORD PTR [rcx+8], ax
  00115	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0011a	48 c1 e8 0c	 shr	 rax, 12
  0011e	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 553  :     *(pGIBLK->pIndex + 3) = (                (U16) dw        ) & 0x1FFF; dw >>= 13;

  00123	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00128	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  0012d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00132	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00136	66 89 41 06	 mov	 WORD PTR [rcx+6], ax
  0013a	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0013f	48 c1 e8 0d	 shr	 rax, 13
  00143	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 554  :     *(pGIBLK->pIndex + 2) = (                (U16) dw        ) & 0x1FFF; dw >>= 13;

  00148	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  0014d	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  00152	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00157	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0015b	66 89 41 04	 mov	 WORD PTR [rcx+4], ax
  0015f	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00164	48 c1 e8 0d	 shr	 rax, 13
  00168	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 555  :     *(pGIBLK->pIndex + 1) = (                (U16) dw        ) & 0x1FFF; dw >>= 13;

  0016d	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00172	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  00177	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0017c	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00180	66 89 41 02	 mov	 WORD PTR [rcx+2], ax
  00184	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00189	48 c1 e8 0d	 shr	 rax, 13
  0018d	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 556  :     *(pGIBLK->pIndex + 0) = (                (U16) dw        );

  00192	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00197	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0019b	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  001a0	66 89 08	 mov	 WORD PTR [rax], cx

; 557  : 
; 558  :     return  13;

  001a3	b0 0d		 mov	 al, 13
$LN1@s370_Get8I:

; 559  : }

  001a5	48 83 c4 38	 add	 rsp, 56			; 00000038H
  001a9	c3		 ret	 0
s370_Get8Index013 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
fw$ = 32
dw$ = 40
pGIBLK$ = 64
s370_Get8Index012 PROC

; 503  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 504  :     register U32 fw;
; 505  :     register U64 dw;
; 506  : 
; 507  :     if (pGIBLK->pCMPSCBLK->nLen2 < 12) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 0c	 cmp	 QWORD PTR [rax+8], 12
  00016	73 07		 jae	 SHORT $LN2@s370_Get8I
  00018	32 c0		 xor	 al, al
  0001a	e9 5c 01 00 00	 jmp	 $LN1@s370_Get8I
$LN2@s370_Get8I:

; 508  : 
; 509  :     fw = fetch_op_fw( pGIBLK->pCMPSCBLK->pOp2 + 8, pGIBLK->pMEMBLK );

  0001f	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0002b	48 83 c0 08	 add	 rax, 8
  0002f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00034	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 s370_cmpsc_vfetch4
  0003f	89 44 24 20	 mov	 DWORD PTR fw$[rsp], eax

; 510  :     dw = fetch_op_dw( pGIBLK->pCMPSCBLK->pOp2 + 0, pGIBLK->pMEMBLK );

  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00048	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00050	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00054	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00057	e8 00 00 00 00	 call	 s370_cmpsc_vfetch8
  0005c	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 511  : 
; 512  :     *(pGIBLK->pIndex + 7) = (  (U16) fw                      ) & 0x0FFF; fw >>= 12;

  00061	0f b7 44 24 20	 movzx	 eax, WORD PTR fw$[rsp]
  00066	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0006b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00070	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00074	66 89 41 0e	 mov	 WORD PTR [rcx+14], ax
  00078	8b 44 24 20	 mov	 eax, DWORD PTR fw$[rsp]
  0007c	c1 e8 0c	 shr	 eax, 12
  0007f	89 44 24 20	 mov	 DWORD PTR fw$[rsp], eax

; 513  :     *(pGIBLK->pIndex + 6) = (  (U16) fw                      ) & 0x0FFF; fw >>= 12;

  00083	0f b7 44 24 20	 movzx	 eax, WORD PTR fw$[rsp]
  00088	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0008d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00092	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00096	66 89 41 0c	 mov	 WORD PTR [rcx+12], ax
  0009a	8b 44 24 20	 mov	 eax, DWORD PTR fw$[rsp]
  0009e	c1 e8 0c	 shr	 eax, 12
  000a1	89 44 24 20	 mov	 DWORD PTR fw$[rsp], eax

; 514  :     *(pGIBLK->pIndex + 5) = ( ((U16) fw) | (((U16) dw) << 8) ) & 0x0FFF; dw >>=  4;

  000a5	0f b7 44 24 20	 movzx	 eax, WORD PTR fw$[rsp]
  000aa	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  000af	c1 e1 08	 shl	 ecx, 8
  000b2	0b c1		 or	 eax, ecx
  000b4	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  000b9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000be	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000c2	66 89 41 0a	 mov	 WORD PTR [rcx+10], ax
  000c6	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000cb	48 c1 e8 04	 shr	 rax, 4
  000cf	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 515  :     *(pGIBLK->pIndex + 4) = (                (U16) dw        ) & 0x0FFF; dw >>= 12;

  000d4	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  000d9	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  000de	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000e3	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000e7	66 89 41 08	 mov	 WORD PTR [rcx+8], ax
  000eb	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000f0	48 c1 e8 0c	 shr	 rax, 12
  000f4	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 516  :     *(pGIBLK->pIndex + 3) = (                (U16) dw        ) & 0x0FFF; dw >>= 12;

  000f9	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  000fe	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  00103	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00108	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0010c	66 89 41 06	 mov	 WORD PTR [rcx+6], ax
  00110	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00115	48 c1 e8 0c	 shr	 rax, 12
  00119	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 517  :     *(pGIBLK->pIndex + 2) = (                (U16) dw        ) & 0x0FFF; dw >>= 12;

  0011e	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00123	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  00128	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0012d	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00131	66 89 41 04	 mov	 WORD PTR [rcx+4], ax
  00135	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0013a	48 c1 e8 0c	 shr	 rax, 12
  0013e	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 518  :     *(pGIBLK->pIndex + 1) = (                (U16) dw        ) & 0x0FFF; dw >>= 12;

  00143	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00148	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0014d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00152	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00156	66 89 41 02	 mov	 WORD PTR [rcx+2], ax
  0015a	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0015f	48 c1 e8 0c	 shr	 rax, 12
  00163	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 519  :     *(pGIBLK->pIndex + 0) = (                (U16) dw        );

  00168	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0016d	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00171	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  00176	66 89 08	 mov	 WORD PTR [rax], cx

; 520  : 
; 521  :     return  12;

  00179	b0 0c		 mov	 al, 12
$LN1@s370_Get8I:

; 522  : }

  0017b	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0017f	c3		 ret	 0
s370_Get8Index012 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
b$ = 32
hw$ = 36
dw$ = 40
pGIBLK$ = 64
s370_Get8Index011 PROC

; 469  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 470  :     register U8  b;
; 471  :     register U16 hw;
; 472  :     register U64 dw;
; 473  : 
; 474  :     if (pGIBLK->pCMPSCBLK->nLen2 < 11) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 0b	 cmp	 QWORD PTR [rax+8], 11
  00016	73 07		 jae	 SHORT $LN2@s370_Get8I
  00018	32 c0		 xor	 al, al
  0001a	e9 91 01 00 00	 jmp	 $LN1@s370_Get8I
$LN2@s370_Get8I:

; 475  : 
; 476  :     b  = fetch_op_b ( pGIBLK->pCMPSCBLK->pOp2 + 10, pGIBLK->pMEMBLK );

  0001f	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0002b	48 83 c0 0a	 add	 rax, 10
  0002f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00034	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 s370_cmpsc_vfetchb
  0003f	88 44 24 20	 mov	 BYTE PTR b$[rsp], al

; 477  :     hw = fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2 +  8, pGIBLK->pMEMBLK );

  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00048	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004b	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0004f	48 83 c0 08	 add	 rax, 8
  00053	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00058	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0005c	8b c8		 mov	 ecx, eax
  0005e	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00063	66 89 44 24 24	 mov	 WORD PTR hw$[rsp], ax

; 478  :     dw = fetch_op_dw( pGIBLK->pCMPSCBLK->pOp2 +  0, pGIBLK->pMEMBLK );

  00068	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0006d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00070	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00075	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00079	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  0007c	e8 00 00 00 00	 call	 s370_cmpsc_vfetch8
  00081	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 479  : 
; 480  :     *(pGIBLK->pIndex + 7) = ( ((U16) b) | (       hw  << 8) ) & 0x07FF; hw >>=  3;

  00086	0f b6 44 24 20	 movzx	 eax, BYTE PTR b$[rsp]
  0008b	0f b7 4c 24 24	 movzx	 ecx, WORD PTR hw$[rsp]
  00090	c1 e1 08	 shl	 ecx, 8
  00093	0b c1		 or	 eax, ecx
  00095	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  0009a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0009f	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000a3	66 89 41 0e	 mov	 WORD PTR [rcx+14], ax
  000a7	0f b7 44 24 24	 movzx	 eax, WORD PTR hw$[rsp]
  000ac	66 c1 e8 03	 shr	 ax, 3
  000b0	66 89 44 24 24	 mov	 WORD PTR hw$[rsp], ax

; 481  :     *(pGIBLK->pIndex + 6) = (    hw                         ) & 0x07FF; hw >>= 11;

  000b5	0f b7 44 24 24	 movzx	 eax, WORD PTR hw$[rsp]
  000ba	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  000bf	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000c4	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000c8	66 89 41 0c	 mov	 WORD PTR [rcx+12], ax
  000cc	0f b7 44 24 24	 movzx	 eax, WORD PTR hw$[rsp]
  000d1	66 c1 e8 0b	 shr	 ax, 11
  000d5	66 89 44 24 24	 mov	 WORD PTR hw$[rsp], ax

; 482  :     *(pGIBLK->pIndex + 5) = (    hw     | (((U16) dw) << 2) ) & 0x07FF; dw >>=  9;

  000da	0f b7 44 24 24	 movzx	 eax, WORD PTR hw$[rsp]
  000df	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  000e4	c1 e1 02	 shl	 ecx, 2
  000e7	0b c1		 or	 eax, ecx
  000e9	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  000ee	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000f3	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000f7	66 89 41 0a	 mov	 WORD PTR [rcx+10], ax
  000fb	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00100	48 c1 e8 09	 shr	 rax, 9
  00104	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 483  :     *(pGIBLK->pIndex + 4) = (               (U16) dw        ) & 0x07FF; dw >>= 11;

  00109	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  0010e	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  00113	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00118	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0011c	66 89 41 08	 mov	 WORD PTR [rcx+8], ax
  00120	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00125	48 c1 e8 0b	 shr	 rax, 11
  00129	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 484  :     *(pGIBLK->pIndex + 3) = (               (U16) dw        ) & 0x07FF; dw >>= 11;

  0012e	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00133	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  00138	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0013d	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00141	66 89 41 06	 mov	 WORD PTR [rcx+6], ax
  00145	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0014a	48 c1 e8 0b	 shr	 rax, 11
  0014e	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 485  :     *(pGIBLK->pIndex + 2) = (               (U16) dw        ) & 0x07FF; dw >>= 11;

  00153	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00158	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  0015d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00162	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00166	66 89 41 04	 mov	 WORD PTR [rcx+4], ax
  0016a	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0016f	48 c1 e8 0b	 shr	 rax, 11
  00173	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 486  :     *(pGIBLK->pIndex + 1) = (               (U16) dw        ) & 0x07FF; dw >>= 11;

  00178	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  0017d	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  00182	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00187	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0018b	66 89 41 02	 mov	 WORD PTR [rcx+2], ax
  0018f	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00194	48 c1 e8 0b	 shr	 rax, 11
  00198	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 487  :     *(pGIBLK->pIndex + 0) = (               (U16) dw        );

  0019d	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  001a2	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  001a6	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  001ab	66 89 08	 mov	 WORD PTR [rax], cx

; 488  : 
; 489  :     return  11;

  001ae	b0 0b		 mov	 al, 11
$LN1@s370_Get8I:

; 490  : }

  001b0	48 83 c4 38	 add	 rsp, 56			; 00000038H
  001b4	c3		 ret	 0
s370_Get8Index011 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
hw$ = 32
dw$ = 40
pGIBLK$ = 64
s370_Get8Index010 PROC

; 434  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 435  :     register U16 hw;
; 436  :     register U64 dw;
; 437  : 
; 438  :     if (pGIBLK->pCMPSCBLK->nLen2 < 10) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 0a	 cmp	 QWORD PTR [rax+8], 10
  00016	73 07		 jae	 SHORT $LN2@s370_Get8I
  00018	32 c0		 xor	 al, al
  0001a	e9 63 01 00 00	 jmp	 $LN1@s370_Get8I
$LN2@s370_Get8I:

; 439  : 
; 440  :     hw = fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2 + 8, pGIBLK->pMEMBLK );

  0001f	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0002b	48 83 c0 08	 add	 rax, 8
  0002f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00034	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  0003f	66 89 44 24 20	 mov	 WORD PTR hw$[rsp], ax

; 441  :     dw = fetch_op_dw( pGIBLK->pCMPSCBLK->pOp2 + 0, pGIBLK->pMEMBLK );

  00044	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00049	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00055	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00058	e8 00 00 00 00	 call	 s370_cmpsc_vfetch8
  0005d	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 442  : 
; 443  :     *(pGIBLK->pIndex + 7) = ( hw                     ) & 0x03FF; hw >>= 10;

  00062	0f b7 44 24 20	 movzx	 eax, WORD PTR hw$[rsp]
  00067	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0006c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00071	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00075	66 89 41 0e	 mov	 WORD PTR [rcx+14], ax
  00079	0f b7 44 24 20	 movzx	 eax, WORD PTR hw$[rsp]
  0007e	66 c1 e8 0a	 shr	 ax, 10
  00082	66 89 44 24 20	 mov	 WORD PTR hw$[rsp], ax

; 444  :     *(pGIBLK->pIndex + 6) = ( hw | (((U16) dw) << 6) ) & 0x03FF; dw >>=  4;

  00087	0f b7 44 24 20	 movzx	 eax, WORD PTR hw$[rsp]
  0008c	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  00091	c1 e1 06	 shl	 ecx, 6
  00094	0b c1		 or	 eax, ecx
  00096	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0009b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000a0	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000a4	66 89 41 0c	 mov	 WORD PTR [rcx+12], ax
  000a8	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000ad	48 c1 e8 04	 shr	 rax, 4
  000b1	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 445  :     *(pGIBLK->pIndex + 5) = (        (U16) dw        ) & 0x03FF; dw >>= 10;

  000b6	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  000bb	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  000c0	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000c5	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000c9	66 89 41 0a	 mov	 WORD PTR [rcx+10], ax
  000cd	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000d2	48 c1 e8 0a	 shr	 rax, 10
  000d6	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 446  :     *(pGIBLK->pIndex + 4) = (        (U16) dw        ) & 0x03FF; dw >>= 10;

  000db	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  000e0	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  000e5	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000ea	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000ee	66 89 41 08	 mov	 WORD PTR [rcx+8], ax
  000f2	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000f7	48 c1 e8 0a	 shr	 rax, 10
  000fb	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 447  :     *(pGIBLK->pIndex + 3) = (        (U16) dw        ) & 0x03FF; dw >>= 10;

  00100	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00105	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0010a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0010f	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00113	66 89 41 06	 mov	 WORD PTR [rcx+6], ax
  00117	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0011c	48 c1 e8 0a	 shr	 rax, 10
  00120	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 448  :     *(pGIBLK->pIndex + 2) = (        (U16) dw        ) & 0x03FF; dw >>= 10;

  00125	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  0012a	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0012f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00134	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00138	66 89 41 04	 mov	 WORD PTR [rcx+4], ax
  0013c	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00141	48 c1 e8 0a	 shr	 rax, 10
  00145	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 449  :     *(pGIBLK->pIndex + 1) = (        (U16) dw        ) & 0x03FF; dw >>= 10;

  0014a	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  0014f	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  00154	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00159	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0015d	66 89 41 02	 mov	 WORD PTR [rcx+2], ax
  00161	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00166	48 c1 e8 0a	 shr	 rax, 10
  0016a	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 450  :     *(pGIBLK->pIndex + 0) = (        (U16) dw        );

  0016f	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00174	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00178	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  0017d	66 89 08	 mov	 WORD PTR [rax], cx

; 451  : 
; 452  :     return  10;

  00180	b0 0a		 mov	 al, 10
$LN1@s370_Get8I:

; 453  : }

  00182	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00186	c3		 ret	 0
s370_Get8Index010 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
b$ = 32
dw$ = 40
pGIBLK$ = 64
s370_Get8Index009 PROC

; 403  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 404  :     register U8  b;
; 405  :     register U64 dw;
; 406  : 
; 407  :     if (pGIBLK->pCMPSCBLK->nLen2 <  9) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 09	 cmp	 QWORD PTR [rax+8], 9
  00016	73 07		 jae	 SHORT $LN2@s370_Get8I
  00018	32 c0		 xor	 al, al
  0001a	e9 61 01 00 00	 jmp	 $LN1@s370_Get8I
$LN2@s370_Get8I:

; 408  : 
; 409  :     b  = fetch_op_b ( pGIBLK->pCMPSCBLK->pOp2 + 8, pGIBLK->pMEMBLK );

  0001f	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0002b	48 83 c0 08	 add	 rax, 8
  0002f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00034	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 s370_cmpsc_vfetchb
  0003f	88 44 24 20	 mov	 BYTE PTR b$[rsp], al

; 410  :     dw = fetch_op_dw( pGIBLK->pCMPSCBLK->pOp2 + 0, pGIBLK->pMEMBLK );

  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00048	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00050	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00054	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00057	e8 00 00 00 00	 call	 s370_cmpsc_vfetch8
  0005c	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 411  : 
; 412  :     *(pGIBLK->pIndex + 7) = ( ((U16) b) | (((U16) dw) << 8) ) & 0x01FF; dw >>= 1;

  00061	0f b6 44 24 20	 movzx	 eax, BYTE PTR b$[rsp]
  00066	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  0006b	c1 e1 08	 shl	 ecx, 8
  0006e	0b c1		 or	 eax, ecx
  00070	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  00075	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0007a	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0007e	66 89 41 0e	 mov	 WORD PTR [rcx+14], ax
  00082	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00087	48 d1 e8	 shr	 rax, 1
  0008a	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 413  :     *(pGIBLK->pIndex + 6) = (               (U16) dw        ) & 0x01FF; dw >>= 9;

  0008f	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00094	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  00099	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0009e	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000a2	66 89 41 0c	 mov	 WORD PTR [rcx+12], ax
  000a6	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000ab	48 c1 e8 09	 shr	 rax, 9
  000af	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 414  :     *(pGIBLK->pIndex + 5) = (               (U16) dw        ) & 0x01FF; dw >>= 9;

  000b4	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  000b9	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  000be	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000c3	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000c7	66 89 41 0a	 mov	 WORD PTR [rcx+10], ax
  000cb	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000d0	48 c1 e8 09	 shr	 rax, 9
  000d4	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 415  :     *(pGIBLK->pIndex + 4) = (               (U16) dw        ) & 0x01FF; dw >>= 9;

  000d9	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  000de	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  000e3	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  000e8	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000ec	66 89 41 08	 mov	 WORD PTR [rcx+8], ax
  000f0	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  000f5	48 c1 e8 09	 shr	 rax, 9
  000f9	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 416  :     *(pGIBLK->pIndex + 3) = (               (U16) dw        ) & 0x01FF; dw >>= 9;

  000fe	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00103	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  00108	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  0010d	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00111	66 89 41 06	 mov	 WORD PTR [rcx+6], ax
  00115	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0011a	48 c1 e8 09	 shr	 rax, 9
  0011e	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 417  :     *(pGIBLK->pIndex + 2) = (               (U16) dw        ) & 0x01FF; dw >>= 9;

  00123	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  00128	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  0012d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00132	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00136	66 89 41 04	 mov	 WORD PTR [rcx+4], ax
  0013a	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  0013f	48 c1 e8 09	 shr	 rax, 9
  00143	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 418  :     *(pGIBLK->pIndex + 1) = (               (U16) dw        ) & 0x01FF; dw >>= 9;

  00148	0f b7 44 24 28	 movzx	 eax, WORD PTR dw$[rsp]
  0014d	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  00152	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00157	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0015b	66 89 41 02	 mov	 WORD PTR [rcx+2], ax
  0015f	48 8b 44 24 28	 mov	 rax, QWORD PTR dw$[rsp]
  00164	48 c1 e8 09	 shr	 rax, 9
  00168	48 89 44 24 28	 mov	 QWORD PTR dw$[rsp], rax

; 419  :     *(pGIBLK->pIndex + 0) = (               (U16) dw        );

  0016d	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00172	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00176	0f b7 4c 24 28	 movzx	 ecx, WORD PTR dw$[rsp]
  0017b	66 89 08	 mov	 WORD PTR [rax], cx

; 420  : 
; 421  :     return  9;

  0017e	b0 09		 mov	 al, 9
$LN1@s370_Get8I:

; 422  : }

  00180	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00184	c3		 ret	 0
s370_Get8Index009 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
s370_GetIndex713 PROC

; 383  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 384  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 75		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 385  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x01FF) << 4)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  0003d	c1 e0 04	 shl	 eax, 4
  00040	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00044	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00049	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004c	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00050	48 83 c1 02	 add	 rcx, 2
  00054	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00059	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005d	e8 00 00 00 00	 call	 s370_cmpsc_vfetchb
  00062	0f b6 c0	 movzx	 eax, al
  00065	c1 f8 04	 sar	 eax, 4
  00068	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006c	0b c8		 or	 ecx, eax
  0006e	8b c1		 mov	 eax, ecx
  00070	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00075	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00079	66 89 01	 mov	 WORD PTR [rcx], ax

; 386  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 4);
; 387  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex413 );

  0007c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00081	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00085	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex413
  0008c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 388  :     return 2;

  0008f	b0 02		 mov	 al, 2
$LN1@s370_GetIn:

; 389  : }

  00091	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00095	c3		 ret	 0
s370_GetIndex713 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
s370_GetIndex613 PROC

; 375  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 376  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 75		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 377  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x03FF) << 3)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0003d	c1 e0 03	 shl	 eax, 3
  00040	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00044	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00049	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004c	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00050	48 83 c1 02	 add	 rcx, 2
  00054	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00059	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005d	e8 00 00 00 00	 call	 s370_cmpsc_vfetchb
  00062	0f b6 c0	 movzx	 eax, al
  00065	c1 f8 05	 sar	 eax, 5
  00068	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006c	0b c8		 or	 ecx, eax
  0006e	8b c1		 mov	 eax, ecx
  00070	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00075	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00079	66 89 01	 mov	 WORD PTR [rcx], ax

; 378  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 5);
; 379  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex313 );

  0007c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00081	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00085	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex313
  0008c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 380  :     return 2;

  0008f	b0 02		 mov	 al, 2
$LN1@s370_GetIn:

; 381  : }

  00091	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00095	c3		 ret	 0
s370_GetIndex613 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
s370_GetIndex513 PROC

; 367  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 368  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 75		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 369  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x07FF) << 2)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  0003d	c1 e0 02	 shl	 eax, 2
  00040	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00044	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00049	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004c	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00050	48 83 c1 02	 add	 rcx, 2
  00054	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00059	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005d	e8 00 00 00 00	 call	 s370_cmpsc_vfetchb
  00062	0f b6 c0	 movzx	 eax, al
  00065	c1 f8 06	 sar	 eax, 6
  00068	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006c	0b c8		 or	 ecx, eax
  0006e	8b c1		 mov	 eax, ecx
  00070	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00075	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00079	66 89 01	 mov	 WORD PTR [rcx], ax

; 370  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 6);
; 371  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex213 );

  0007c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00081	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00085	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex213
  0008c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 372  :     return 2;

  0008f	b0 02		 mov	 al, 2
$LN1@s370_GetIn:

; 373  : }

  00091	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00095	c3		 ret	 0
s370_GetIndex513 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
s370_GetIndex413 PROC

; 359  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 360  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 74		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 361  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x0FFF) << 1)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0003d	d1 e0		 shl	 eax, 1
  0003f	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00043	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00048	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004b	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  0004f	48 83 c1 02	 add	 rcx, 2
  00053	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00058	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005c	e8 00 00 00 00	 call	 s370_cmpsc_vfetchb
  00061	0f b6 c0	 movzx	 eax, al
  00064	c1 f8 07	 sar	 eax, 7
  00067	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006b	0b c8		 or	 ecx, eax
  0006d	8b c1		 mov	 eax, ecx
  0006f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00074	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00078	66 89 01	 mov	 WORD PTR [rcx], ax

; 362  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 7);
; 363  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex113 );

  0007b	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00080	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00084	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex113
  0008b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 364  :     return 2;

  0008e	b0 02		 mov	 al, 2
$LN1@s370_GetIn:

; 365  : }

  00090	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00094	c3		 ret	 0
s370_GetIndex413 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex313 PROC

; 352  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 353  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 42		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 354  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x1FFF);

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00042	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00046	66 89 01	 mov	 WORD PTR [rcx], ax

; 355  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex013 );

  00049	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004e	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00052	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex013
  00059	48 89 08	 mov	 QWORD PTR [rax], rcx

; 356  :     return 2;

  0005c	b0 02		 mov	 al, 2
$LN1@s370_GetIn:

; 357  : }

  0005e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00062	c3		 ret	 0
s370_GetIndex313 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex213 PROC

; 345  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 346  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 44		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 347  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x3FFF) >> 1;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 3f 00 00	 and	 eax, 16383		; 00003fffH
  0003d	d1 f8		 sar	 eax, 1
  0003f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00044	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00048	66 89 01	 mov	 WORD PTR [rcx], ax

; 348  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex713 );

  0004b	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00050	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00054	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex713
  0005b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 349  :     return 1;

  0005e	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 350  : }

  00060	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00064	c3		 ret	 0
s370_GetIndex213 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex113 PROC

; 338  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 339  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 340  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x7FFF) >> 2;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 7f 00 00	 and	 eax, 32767		; 00007fffH
  0003d	c1 f8 02	 sar	 eax, 2
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 341  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex613 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex613
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 342  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 343  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s370_GetIndex113 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex013 PROC

; 331  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 332  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 40		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 333  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK )         ) >> 3;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	c1 f8 03	 sar	 eax, 3
  0003b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00040	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00044	66 89 01	 mov	 WORD PTR [rcx], ax

; 334  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex513 );

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004c	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00050	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex513
  00057	48 89 08	 mov	 QWORD PTR [rax], rcx

; 335  :     return 1;

  0005a	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 336  : }

  0005c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00060	c3		 ret	 0
s370_GetIndex013 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
s370_GetIndex712 PROC

; 317  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 318  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 75		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 319  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x01FF) << 3)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  0003d	c1 e0 03	 shl	 eax, 3
  00040	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00044	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00049	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004c	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00050	48 83 c1 02	 add	 rcx, 2
  00054	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00059	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005d	e8 00 00 00 00	 call	 s370_cmpsc_vfetchb
  00062	0f b6 c0	 movzx	 eax, al
  00065	c1 f8 05	 sar	 eax, 5
  00068	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006c	0b c8		 or	 ecx, eax
  0006e	8b c1		 mov	 eax, ecx
  00070	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00075	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00079	66 89 01	 mov	 WORD PTR [rcx], ax

; 320  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 5);
; 321  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex312 );

  0007c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00081	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00085	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex312
  0008c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 322  :     return 2;

  0008f	b0 02		 mov	 al, 2
$LN1@s370_GetIn:

; 323  : }

  00091	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00095	c3		 ret	 0
s370_GetIndex712 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
s370_GetIndex612 PROC

; 309  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 310  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 75		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 311  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x03FF) << 2)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0003d	c1 e0 02	 shl	 eax, 2
  00040	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00044	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00049	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004c	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00050	48 83 c1 02	 add	 rcx, 2
  00054	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00059	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005d	e8 00 00 00 00	 call	 s370_cmpsc_vfetchb
  00062	0f b6 c0	 movzx	 eax, al
  00065	c1 f8 06	 sar	 eax, 6
  00068	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006c	0b c8		 or	 ecx, eax
  0006e	8b c1		 mov	 eax, ecx
  00070	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00075	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00079	66 89 01	 mov	 WORD PTR [rcx], ax

; 312  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 6);
; 313  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex212 );

  0007c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00081	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00085	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex212
  0008c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 314  :     return 2;

  0008f	b0 02		 mov	 al, 2
$LN1@s370_GetIn:

; 315  : }

  00091	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00095	c3		 ret	 0
s370_GetIndex612 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
s370_GetIndex512 PROC

; 301  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 302  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 74		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 303  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x07FF) << 1)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  0003d	d1 e0		 shl	 eax, 1
  0003f	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00043	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00048	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004b	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  0004f	48 83 c1 02	 add	 rcx, 2
  00053	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00058	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005c	e8 00 00 00 00	 call	 s370_cmpsc_vfetchb
  00061	0f b6 c0	 movzx	 eax, al
  00064	c1 f8 07	 sar	 eax, 7
  00067	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006b	0b c8		 or	 ecx, eax
  0006d	8b c1		 mov	 eax, ecx
  0006f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00074	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00078	66 89 01	 mov	 WORD PTR [rcx], ax

; 304  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 7);
; 305  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex112 );

  0007b	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00080	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00084	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex112
  0008b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 306  :     return 2;

  0008e	b0 02		 mov	 al, 2
$LN1@s370_GetIn:

; 307  : }

  00090	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00094	c3		 ret	 0
s370_GetIndex512 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex412 PROC

; 294  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 295  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 42		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 296  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x0FFF);

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00042	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00046	66 89 01	 mov	 WORD PTR [rcx], ax

; 297  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex012 );

  00049	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004e	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00052	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex012
  00059	48 89 08	 mov	 QWORD PTR [rax], rcx

; 298  :     return 2;

  0005c	b0 02		 mov	 al, 2
$LN1@s370_GetIn:

; 299  : }

  0005e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00062	c3		 ret	 0
s370_GetIndex412 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex312 PROC

; 287  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 288  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 44		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 289  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x1FFF) >> 1;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  0003d	d1 f8		 sar	 eax, 1
  0003f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00044	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00048	66 89 01	 mov	 WORD PTR [rcx], ax

; 290  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex712 );

  0004b	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00050	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00054	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex712
  0005b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 291  :     return 1;

  0005e	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 292  : }

  00060	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00064	c3		 ret	 0
s370_GetIndex312 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex212 PROC

; 280  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 281  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 282  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x3FFF) >> 2;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 3f 00 00	 and	 eax, 16383		; 00003fffH
  0003d	c1 f8 02	 sar	 eax, 2
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 283  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex612 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex612
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 284  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 285  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s370_GetIndex212 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex112 PROC

; 273  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 274  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 275  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x7FFF) >> 3;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 7f 00 00	 and	 eax, 32767		; 00007fffH
  0003d	c1 f8 03	 sar	 eax, 3
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 276  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex512 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex512
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 277  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 278  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s370_GetIndex112 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex012 PROC

; 266  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 267  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 40		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 268  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK )         ) >> 4;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	c1 f8 04	 sar	 eax, 4
  0003b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00040	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00044	66 89 01	 mov	 WORD PTR [rcx], ax

; 269  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex412 );

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004c	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00050	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex412
  00057	48 89 08	 mov	 QWORD PTR [rax], rcx

; 270  :     return 1;

  0005a	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 271  : }

  0005c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00060	c3		 ret	 0
s370_GetIndex012 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
s370_GetIndex711 PROC

; 252  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 253  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 75		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 254  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x01FF) << 2)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  0003d	c1 e0 02	 shl	 eax, 2
  00040	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00044	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00049	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004c	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00050	48 83 c1 02	 add	 rcx, 2
  00054	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00059	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005d	e8 00 00 00 00	 call	 s370_cmpsc_vfetchb
  00062	0f b6 c0	 movzx	 eax, al
  00065	c1 f8 06	 sar	 eax, 6
  00068	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006c	0b c8		 or	 ecx, eax
  0006e	8b c1		 mov	 eax, ecx
  00070	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00075	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00079	66 89 01	 mov	 WORD PTR [rcx], ax

; 255  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 6);
; 256  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex211 );

  0007c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00081	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00085	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex211
  0008c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 257  :     return 2;

  0008f	b0 02		 mov	 al, 2
$LN1@s370_GetIn:

; 258  : }

  00091	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00095	c3		 ret	 0
s370_GetIndex711 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
s370_GetIndex611 PROC

; 244  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 245  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 74		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 246  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x03FF) << 1)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0003d	d1 e0		 shl	 eax, 1
  0003f	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00043	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00048	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004b	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  0004f	48 83 c1 02	 add	 rcx, 2
  00053	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00058	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005c	e8 00 00 00 00	 call	 s370_cmpsc_vfetchb
  00061	0f b6 c0	 movzx	 eax, al
  00064	c1 f8 07	 sar	 eax, 7
  00067	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006b	0b c8		 or	 ecx, eax
  0006d	8b c1		 mov	 eax, ecx
  0006f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00074	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00078	66 89 01	 mov	 WORD PTR [rcx], ax

; 247  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 7);
; 248  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex111 );

  0007b	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00080	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00084	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex111
  0008b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 249  :     return 2;

  0008e	b0 02		 mov	 al, 2
$LN1@s370_GetIn:

; 250  : }

  00090	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00094	c3		 ret	 0
s370_GetIndex611 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex511 PROC

; 237  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 238  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 42		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 239  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x07FF);

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00042	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00046	66 89 01	 mov	 WORD PTR [rcx], ax

; 240  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex011 );

  00049	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004e	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00052	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex011
  00059	48 89 08	 mov	 QWORD PTR [rax], rcx

; 241  :     return 2;

  0005c	b0 02		 mov	 al, 2
$LN1@s370_GetIn:

; 242  : }

  0005e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00062	c3		 ret	 0
s370_GetIndex511 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex411 PROC

; 230  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 231  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 44		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 232  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x0FFF) >> 1;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0003d	d1 f8		 sar	 eax, 1
  0003f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00044	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00048	66 89 01	 mov	 WORD PTR [rcx], ax

; 233  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex711 );

  0004b	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00050	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00054	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex711
  0005b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 234  :     return 1;

  0005e	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 235  : }

  00060	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00064	c3		 ret	 0
s370_GetIndex411 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex311 PROC

; 223  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 224  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 225  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x1FFF) >> 2;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  0003d	c1 f8 02	 sar	 eax, 2
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 226  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex611 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex611
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 227  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 228  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s370_GetIndex311 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex211 PROC

; 216  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 217  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 218  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x3FFF) >> 3;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 3f 00 00	 and	 eax, 16383		; 00003fffH
  0003d	c1 f8 03	 sar	 eax, 3
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 219  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex511 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex511
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 220  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 221  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s370_GetIndex211 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex111 PROC

; 209  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 210  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 211  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x7FFF) >> 4;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 7f 00 00	 and	 eax, 32767		; 00007fffH
  0003d	c1 f8 04	 sar	 eax, 4
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 212  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex411 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex411
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 213  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 214  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s370_GetIndex111 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex011 PROC

; 202  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 203  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 40		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 204  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK )         ) >> 5;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	c1 f8 05	 sar	 eax, 5
  0003b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00040	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00044	66 89 01	 mov	 WORD PTR [rcx], ax

; 205  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex311 );

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004c	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00050	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex311
  00057	48 89 08	 mov	 QWORD PTR [rax], rcx

; 206  :     return 1;

  0005a	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 207  : }

  0005c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00060	c3		 ret	 0
s370_GetIndex011 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
tv76 = 32
pGIBLK$ = 64
s370_GetIndex710 PROC

; 188  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 189  :     if (pGIBLK->pCMPSCBLK->nLen2 < 3) return 0;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 03	 cmp	 QWORD PTR [rax+8], 3
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 74		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 190  :     *pGIBLK->pIndex = ((fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x01FF) << 1)

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  0003d	d1 e0		 shl	 eax, 1
  0003f	89 44 24 20	 mov	 DWORD PTR tv76[rsp], eax
  00043	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00048	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004b	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  0004f	48 83 c1 02	 add	 rcx, 2
  00053	48 8b 54 24 40	 mov	 rdx, QWORD PTR pGIBLK$[rsp]
  00058	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0005c	e8 00 00 00 00	 call	 s370_cmpsc_vfetchb
  00061	0f b6 c0	 movzx	 eax, al
  00064	c1 f8 07	 sar	 eax, 7
  00067	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  0006b	0b c8		 or	 ecx, eax
  0006d	8b c1		 mov	 eax, ecx
  0006f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00074	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00078	66 89 01	 mov	 WORD PTR [rcx], ax

; 191  :                  | ((U16)fetch_op_b( pGIBLK->pCMPSCBLK->pOp2 + 2, pGIBLK->pMEMBLK )           >> 7);
; 192  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex110 );

  0007b	48 8b 44 24 40	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00080	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00084	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex110
  0008b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 193  :     return 2;

  0008e	b0 02		 mov	 al, 2
$LN1@s370_GetIn:

; 194  : }

  00090	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00094	c3		 ret	 0
s370_GetIndex710 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex610 PROC

; 181  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 182  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 42		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 183  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x03FF);

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00042	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00046	66 89 01	 mov	 WORD PTR [rcx], ax

; 184  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex010 );

  00049	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004e	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00052	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex010
  00059	48 89 08	 mov	 QWORD PTR [rax], rcx

; 185  :     return 2;

  0005c	b0 02		 mov	 al, 2
$LN1@s370_GetIn:

; 186  : }

  0005e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00062	c3		 ret	 0
s370_GetIndex610 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex510 PROC

; 174  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 175  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 44		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 176  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x07FF) >> 1;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  0003d	d1 f8		 sar	 eax, 1
  0003f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00044	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00048	66 89 01	 mov	 WORD PTR [rcx], ax

; 177  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex710 );

  0004b	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00050	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00054	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex710
  0005b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 178  :     return 1;

  0005e	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 179  : }

  00060	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00064	c3		 ret	 0
s370_GetIndex510 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex410 PROC

; 167  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 168  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 169  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x0FFF) >> 2;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0003d	c1 f8 02	 sar	 eax, 2
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 170  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex610 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex610
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 171  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 172  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s370_GetIndex410 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex310 PROC

; 160  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 161  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 162  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x1FFF) >> 3;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  0003d	c1 f8 03	 sar	 eax, 3
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 163  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex510 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex510
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 164  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 165  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s370_GetIndex310 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex210 PROC

; 153  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 154  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 155  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x3FFF) >> 4;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 3f 00 00	 and	 eax, 16383		; 00003fffH
  0003d	c1 f8 04	 sar	 eax, 4
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 156  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex410 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex410
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 157  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 158  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s370_GetIndex210 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex110 PROC

; 146  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 147  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 148  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x7FFF) >> 5;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 7f 00 00	 and	 eax, 32767		; 00007fffH
  0003d	c1 f8 05	 sar	 eax, 5
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 149  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex310 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex310
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 150  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 151  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s370_GetIndex110 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex010 PROC

; 139  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 140  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 40		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 141  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK )         ) >> 6;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	c1 f8 06	 sar	 eax, 6
  0003b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00040	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00044	66 89 01	 mov	 WORD PTR [rcx], ax

; 142  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex210 );

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004c	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00050	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex210
  00057	48 89 08	 mov	 QWORD PTR [rax], rcx

; 143  :     return 1;

  0005a	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 144  : }

  0005c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00060	c3		 ret	 0
s370_GetIndex010 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex709 PROC

; 126  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 127  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 42		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 128  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x01FF);

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 01 00 00	 and	 eax, 511		; 000001ffH
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00042	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00046	66 89 01	 mov	 WORD PTR [rcx], ax

; 129  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex009 );

  00049	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004e	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00052	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex009
  00059	48 89 08	 mov	 QWORD PTR [rax], rcx

; 130  :     return 2;

  0005c	b0 02		 mov	 al, 2
$LN1@s370_GetIn:

; 131  : }

  0005e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00062	c3		 ret	 0
s370_GetIndex709 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex609 PROC

; 119  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 120  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 44		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 121  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x03FF) >> 1;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 03 00 00	 and	 eax, 1023		; 000003ffH
  0003d	d1 f8		 sar	 eax, 1
  0003f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00044	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00048	66 89 01	 mov	 WORD PTR [rcx], ax

; 122  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex709 );

  0004b	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00050	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00054	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex709
  0005b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 123  :     return 1;

  0005e	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 124  : }

  00060	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00064	c3		 ret	 0
s370_GetIndex609 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex509 PROC

; 112  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 113  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 114  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x07FF) >> 2;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  0003d	c1 f8 02	 sar	 eax, 2
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 115  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex609 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex609
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 116  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 117  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s370_GetIndex509 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex409 PROC

; 105  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 106  :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 107  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x0FFF) >> 3;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0003d	c1 f8 03	 sar	 eax, 3
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 108  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex509 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex509
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 109  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 110  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s370_GetIndex409 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex309 PROC

; 98   : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 99   :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 100  :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x1FFF) >> 4;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 1f 00 00	 and	 eax, 8191		; 00001fffH
  0003d	c1 f8 04	 sar	 eax, 4
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 101  :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex409 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex409
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 102  :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 103  : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s370_GetIndex309 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex209 PROC

; 91   : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 92   :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 93   :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x3FFF) >> 5;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 3f 00 00	 and	 eax, 16383		; 00003fffH
  0003d	c1 f8 05	 sar	 eax, 5
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 94   :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex309 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex309
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 95   :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 96   : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s370_GetIndex209 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex109 PROC

; 84   : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 85   :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 45		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 86   :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK ) & 0x7FFF) >> 6;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	25 ff 7f 00 00	 and	 eax, 32767		; 00007fffH
  0003d	c1 f8 06	 sar	 eax, 6
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00045	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00049	66 89 01	 mov	 WORD PTR [rcx], ax

; 87   :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex209 );

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00051	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex209
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 88   :     return 1;

  0005f	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 89   : }

  00061	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00065	c3		 ret	 0
s370_GetIndex109 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\papa\MyGit\hyperion-zvector\cmpscget.c
_TEXT	SEGMENT
pGIBLK$ = 48
s370_GetIndex009 PROC

; 77   : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 78   :     if (pGIBLK->pCMPSCBLK->nLen2 < 2) return 0;

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0000e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00011	48 83 78 08 02	 cmp	 QWORD PTR [rax+8], 2
  00016	73 04		 jae	 SHORT $LN2@s370_GetIn
  00018	32 c0		 xor	 al, al
  0001a	eb 40		 jmp	 SHORT $LN1@s370_GetIn
$LN2@s370_GetIn:

; 79   :     *pGIBLK->pIndex = (fetch_op_hw( pGIBLK->pCMPSCBLK->pOp2,     pGIBLK->pMEMBLK )         ) >> 7;

  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00029	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0002d	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  00030	e8 00 00 00 00	 call	 s370_cmpsc_vfetch2
  00035	0f b7 c0	 movzx	 eax, ax
  00038	c1 f8 07	 sar	 eax, 7
  0003b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pGIBLK$[rsp]
  00040	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00044	66 89 01	 mov	 WORD PTR [rcx], ax

; 80   :     *pGIBLK->ppGetIndex = ARCH_DEP( GetIndex109 );

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR pGIBLK$[rsp]
  0004c	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00050	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:s370_GetIndex109
  00057	48 89 08	 mov	 QWORD PTR [rax], rcx

; 81   :     return 1;

  0005a	b0 01		 mov	 al, 1
$LN1@s370_GetIn:

; 82   : }

  0005c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00060	c3		 ret	 0
s370_GetIndex009 ENDP
_TEXT	ENDS
END
